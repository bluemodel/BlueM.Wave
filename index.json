{
  "api/BlueM.Wave.App.html": {
    "href": "api/BlueM.Wave.App.html",
    "title": "Class App | BlueM.Wave",
    "summary": "Class App Namespace BlueM.Wave Assembly Wave.dll Class representing an instance of the Wave app public class App : ApplicationContext, IDisposable Inheritance object ApplicationContext App Implements IDisposable Inherited Members ApplicationContext.Dispose() ApplicationContext.Dispose(bool) ApplicationContext.ExitThread() ApplicationContext.ExitThreadCore() ApplicationContext.OnMainFormClosed(object, EventArgs) ApplicationContext.MainForm ApplicationContext.Tag ApplicationContext.ThreadExit object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors App() Instantiates a new Wave app and shows the main Wave window public App() App(Wave) Instantiates a new Wave app with the passed Wave instance as the model and shows the main Wave window public App(Wave wave) Parameters wave Wave the Wave instance to use as the model Properties Wave The Wave instance associated with this app instance public Wave Wave { get; } Property Value Wave"
  },
  "api/BlueM.Wave.Character.html": {
    "href": "api/BlueM.Wave.Character.html",
    "title": "Class Character | BlueM.Wave",
    "summary": "Class Character Namespace BlueM.Wave Assembly Wave.dll Helper Class for Characters public class Character Inheritance object Character Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Character(char) Constructor public Character(char chr) Parameters chr char Character Character(string) Constructor public Character(string str) Parameters str string String to convert (only the first character is used) Special strings such as \" \", \"space\", \"tab\", \"point\", \"comma\" and \"semicolon\" are also possible Properties ToChar Returns a Char instance public char ToChar { get; set; } Property Value char Methods ToString() Returns a plaintext string representation (e.g. \"comma\") public override string ToString() Returns string"
  },
  "api/BlueM.Wave.DateRange.html": {
    "href": "api/BlueM.Wave.DateRange.html",
    "title": "Class DateRange | BlueM.Wave",
    "summary": "Class DateRange Namespace BlueM.Wave Assembly Wave.dll Represents a date range with defined start and end dates public class DateRange Inheritance object DateRange Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors DateRange(DateTime, DateTime) public DateRange(DateTime start, DateTime end) Parameters start DateTime end DateTime Fields end public DateTime end Field Value DateTime start public DateTime start Field Value DateTime Properties Length public TimeSpan Length { get; } Property Value TimeSpan"
  },
  "api/BlueM.Wave.Fileformats.ASC.html": {
    "href": "api/BlueM.Wave.Fileformats.ASC.html",
    "title": "Class ASC | BlueM.Wave",
    "summary": "Class ASC Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r ASC-Dateiformat (SMUSI) public class ASC : TimeSeriesFile Inheritance object TimeSeriesFile ASC Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/ASC-Format Kann nur das ASC-Format von SMUSI-Versionen vor v4.0 einlesen. TODO: Das ASC-Format ab SMUSI 4.0 sollte erkannt und zumindest eine entsprechende Meldung ausgegeben werden Constructors ASC(string, bool) public ASC(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo()"
  },
  "api/BlueM.Wave.Fileformats.BIN.html": {
    "href": "api/BlueM.Wave.Fileformats.BIN.html",
    "title": "Class BIN | BlueM.Wave",
    "summary": "Class BIN Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r das SYDRO Bin채rformat public class BIN : TimeSeriesFile Inheritance object TimeSeriesFile BIN Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors BIN(string, bool) public BIN(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Fields ErrorValue Error value public const double ErrorValue = -9999.999 Field Value double Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods Write_File(ref TimeSeries, string) Write a time series to a BIN file public static void Write_File(ref TimeSeries ts, string file) Parameters ts TimeSeries the timeseries to write file string path to the file readFile() Reads the file public override void readFile() readSeriesInfo() Reads series info public override void readSeriesInfo()"
  },
  "api/BlueM.Wave.Fileformats.CSV.html": {
    "href": "api/BlueM.Wave.Fileformats.CSV.html",
    "title": "Class CSV | BlueM.Wave",
    "summary": "Class CSV Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r generisches Textformat public class CSV : TimeSeriesFile Inheritance object TimeSeriesFile CSV Derived GINA_WEL Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors CSV(string) public CSV(string FileName) Parameters FileName string Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods Write_File(ref List<TimeSeries>, string, CultureInfo) Write one or multiple series to a CSV file public static void Write_File(ref List<TimeSeries> tsList, string file, CultureInfo cInfo = null) Parameters tsList List<TimeSeries> time series to write to file file string path to the csv file cInfo CultureInfo optional CultureInfo object for setting the date time format, number format and the list separator. if not set, these settings are taken from CurrentCulture readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo()"
  },
  "api/BlueM.Wave.Fileformats.DFS0.html": {
    "href": "api/BlueM.Wave.Fileformats.DFS0.html",
    "title": "Class DFS0 | BlueM.Wave",
    "summary": "Class DFS0 Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for importing the DHI MIKE Dfs0 format Requires the DHI.DFS Nuget package: https://www.nuget.org/packages/DHI.DFS/ Docs: https://docs.mikepoweredbydhi.com/core_libraries/dfs/dfs_api/ https://docs.mikepoweredbydhi.com/core_libraries/dfs/dfs-file-formats/#dfs0-file https://docs.mikepoweredbydhi.com/SDK_UserGuide/#eum-quantity Code is loosely based on the following examples: https://github.com/DHI/MIKECore-Examples/blob/master/Examples/CSharp/ExamplesDfs0.cs public class DFS0 : TimeSeriesFile Inheritance object TimeSeriesFile DFS0 Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Only works in x64 Constructors DFS0(string, bool) public DFS0(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Flag indicating whether to show the import dialog public override bool UseImportDialog { get; } Property Value bool Methods InterpretationToDataValueType(InterpretationEnum) Converts a TimeSeries.Interpretation to a DHI.Generic.MikeZero.DFS.DataValueType public static DataValueType InterpretationToDataValueType(TimeSeries.InterpretationEnum interpretation) Parameters interpretation TimeSeries.InterpretationEnum the interpretation to convert Returns DataValueType the corresponding DataValueType, defaults to DataValueType.Instantaneous UnitToEUMUnit(string) Converts a string unit to a DHI.Generic.MikeZero.eumUnit public static eumUnit UnitToEUMUnit(string unit) Parameters unit string unit Returns eumUnit the corresponding eumUnit, defaults to eumUUnitUndefined Write_File(ref List<TimeSeries>, string) Writes one or more timeseries to a DFS0 file Displays a dialog for setting EUM Item and Unit public static void Write_File(ref List<TimeSeries> tsList, string path) Parameters tsList List<TimeSeries> list of TimeSeries path string path to file readFile() Reads the file public override void readFile() readSeriesInfo() Reads series info public override void readSeriesInfo()"
  },
  "api/BlueM.Wave.Fileformats.FEWS_PI.XMLDate.html": {
    "href": "api/BlueM.Wave.Fileformats.FEWS_PI.XMLDate.html",
    "title": "Class FEWS_PI.XMLDate | BlueM.Wave",
    "summary": "Class FEWS_PI.XMLDate Namespace BlueM.Wave.Fileformats Assembly Wave.dll public class FEWS_PI.XMLDate Inheritance object FEWS_PI.XMLDate Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLDate() public XMLDate() Fields date public string date Field Value string time public string time Field Value string Properties dt public DateTime dt { get; } Property Value DateTime"
  },
  "api/BlueM.Wave.Fileformats.FEWS_PI.XMLEvent.html": {
    "href": "api/BlueM.Wave.Fileformats.FEWS_PI.XMLEvent.html",
    "title": "Class FEWS_PI.XMLEvent | BlueM.Wave",
    "summary": "Class FEWS_PI.XMLEvent Namespace BlueM.Wave.Fileformats Assembly Wave.dll public class FEWS_PI.XMLEvent Inheritance object FEWS_PI.XMLEvent Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLEvent() public XMLEvent() Fields date public string date Field Value string flag public int flag Field Value int time public string time Field Value string value public double value Field Value double Properties dt public DateTime dt { get; } Property Value DateTime"
  },
  "api/BlueM.Wave.Fileformats.FEWS_PI.XMLHeader.html": {
    "href": "api/BlueM.Wave.Fileformats.FEWS_PI.XMLHeader.html",
    "title": "Class FEWS_PI.XMLHeader | BlueM.Wave",
    "summary": "Class FEWS_PI.XMLHeader Namespace BlueM.Wave.Fileformats Assembly Wave.dll public class FEWS_PI.XMLHeader Inheritance object FEWS_PI.XMLHeader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLHeader() public XMLHeader() Fields endDate public FEWS_PI.XMLDate endDate Field Value FEWS_PI.XMLDate locationId public string locationId Field Value string missVal public double missVal Field Value double parameterId public string parameterId Field Value string startDate public FEWS_PI.XMLDate startDate Field Value FEWS_PI.XMLDate stationName public string stationName Field Value string timeStep public FEWS_PI.XMLTimeStep timeStep Field Value FEWS_PI.XMLTimeStep type public string type Field Value string units public string units Field Value string"
  },
  "api/BlueM.Wave.Fileformats.FEWS_PI.XMLSeries.html": {
    "href": "api/BlueM.Wave.Fileformats.FEWS_PI.XMLSeries.html",
    "title": "Class FEWS_PI.XMLSeries | BlueM.Wave",
    "summary": "Class FEWS_PI.XMLSeries Namespace BlueM.Wave.Fileformats Assembly Wave.dll public class FEWS_PI.XMLSeries Inheritance object FEWS_PI.XMLSeries Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLSeries() public XMLSeries() Fields events public List<FEWS_PI.XMLEvent> events Field Value List<FEWS_PI.XMLEvent> header public FEWS_PI.XMLHeader header Field Value FEWS_PI.XMLHeader"
  },
  "api/BlueM.Wave.Fileformats.FEWS_PI.XMLTimeSeries.html": {
    "href": "api/BlueM.Wave.Fileformats.FEWS_PI.XMLTimeSeries.html",
    "title": "Class FEWS_PI.XMLTimeSeries | BlueM.Wave",
    "summary": "Class FEWS_PI.XMLTimeSeries Namespace BlueM.Wave.Fileformats Assembly Wave.dll Object representation of the Delft-FEWS PI timeseries XML structure public class FEWS_PI.XMLTimeSeries Inheritance object FEWS_PI.XMLTimeSeries Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLTimeSeries() public XMLTimeSeries() Fields series public List<FEWS_PI.XMLSeries> series Field Value List<FEWS_PI.XMLSeries> timeZone public string timeZone Field Value string version public string version Field Value string xmlns public XmlSerializerNamespaces xmlns Field Value XmlSerializerNamespaces Properties schemaLocation public string schemaLocation { get; set; } Property Value string"
  },
  "api/BlueM.Wave.Fileformats.FEWS_PI.XMLTimeStep.html": {
    "href": "api/BlueM.Wave.Fileformats.FEWS_PI.XMLTimeStep.html",
    "title": "Class FEWS_PI.XMLTimeStep | BlueM.Wave",
    "summary": "Class FEWS_PI.XMLTimeStep Namespace BlueM.Wave.Fileformats Assembly Wave.dll public class FEWS_PI.XMLTimeStep Inheritance object FEWS_PI.XMLTimeStep Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors XMLTimeStep() public XMLTimeStep() Fields multiplier public int multiplier Field Value int unit public string unit Field Value string"
  },
  "api/BlueM.Wave.Fileformats.FEWS_PI.html": {
    "href": "api/BlueM.Wave.Fileformats.FEWS_PI.html",
    "title": "Class FEWS_PI | BlueM.Wave",
    "summary": "Class FEWS_PI Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for the Delft-FEWS published interface timeseries format Format description: https://publicwiki.deltares.nl/spaces/FEWSDOC/pages/8683960/Delft-Fews+Published+Interface+timeseries+Format+PI+Import XML schema: https://fews.wldelft.nl/schemas/version1.0/pi-schemas/pi_timeseries.xsd public class FEWS_PI : TimeSeriesFile Inheritance object TimeSeriesFile FEWS_PI Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FEWS_PI(string, bool) Instantiates a new FEWS_PI object public FEWS_PI(string file, bool ReadAllNow = false) Parameters file string path to the file ReadAllNow bool Properties MetadataKeys Returns a list of Delft-FEWS PI-specific metadata keys public static List<string> MetadataKeys { get; } Property Value List<string> UseImportDialog Specifies whether to use the file import dialog public override bool UseImportDialog { get; } Property Value bool Methods Write_File(ref List<TimeSeries>, string) Write one or multiple series to an XML file in Delft-FEWS PI timeseries format public static void Write_File(ref List<TimeSeries> tsList, string file) Parameters tsList List<TimeSeries> time series to write to file file string path to the xml file readFile() reads the file public override void readFile() readSeriesInfo() Reads the metadata from the file public override void readSeriesInfo() setDefaultMetadata(TimeSeries) Sets default metadata values for a time series corresponding to the Delft-FEWS PI timeseries format public static void setDefaultMetadata(TimeSeries ts) Parameters ts TimeSeries verifyFormat(string) Checks whether a file conforms with the Delft-FEWS PI-format public static bool verifyFormat(string file) Parameters file string path to file Returns bool Boolean"
  },
  "api/BlueM.Wave.Fileformats.GBL.html": {
    "href": "api/BlueM.Wave.Fileformats.GBL.html",
    "title": "Class GBL | BlueM.Wave",
    "summary": "Class GBL Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for the GINA binary WEL format public class GBL : TimeSeriesFile Inheritance object TimeSeriesFile GBL Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GBL(string, bool) public GBL(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Reads the file with GBL format structure public override void readFile() readSeriesInfo() Reads series info for GBL format structure based on header public override void readSeriesInfo() verifyFormat(string) Checks whether a file is a GINA binary file public static bool verifyFormat(string file) Parameters file string path to the file to check Returns bool True if verification was successful Remarks Adapted from Fortran routine FILE_GETRECL (formerly ZRE_GETRECL)"
  },
  "api/BlueM.Wave.Fileformats.GINA_WEL.html": {
    "href": "api/BlueM.Wave.Fileformats.GINA_WEL.html",
    "title": "Class GINA_WEL | BlueM.Wave",
    "summary": "Class GINA_WEL Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for the GINA WEL file format It is essentially a CSV format, this class only contains a method for detecting the format and overrides the CSV import settings in the constructor public class GINA_WEL : CSV Inheritance object TimeSeriesFile CSV GINA_WEL Inherited Members CSV.readSeriesInfo() CSV.readFile() CSV.Write_File(ref List<TimeSeries>, string, CultureInfo) CSV.UseImportDialog TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/GINA-WEL-Format Constructors GINA_WEL(string) public GINA_WEL(string FileName) Parameters FileName string Methods verifyFormat(string) Checks if the file is a GINA WEL result file public static bool verifyFormat(string file) Parameters file string file path Returns bool True if the file is a GINA WEL result file"
  },
  "api/BlueM.Wave.Fileformats.GISMO_WEL.html": {
    "href": "api/BlueM.Wave.Fileformats.GISMO_WEL.html",
    "title": "Class GISMO_WEL | BlueM.Wave",
    "summary": "Class GISMO_WEL Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for importing GISMO result files (.CSV,.ASC) For information about GISMO refer to http://www.sydro.de/ For file format info refer to https://wiki.bluemodel.org/index.php/WEL-Format_%28GISMO%29 public class GISMO_WEL : TimeSeriesFile Inheritance object TimeSeriesFile GISMO_WEL Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GISMO_WEL(string) public GISMO_WEL(string FileName) Parameters FileName string Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods IsCSV() Checks whether the GISMO result file is CSV (semicolon-separated) or ASC (space-separated) public bool IsCSV() Returns bool True if the file is CSV (semicolon-separated) readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo() verifyFormat(string) Checks if the file is a GISMO result file (either *.CSV or *.ASC) public static bool verifyFormat(string file) Parameters file string file path Returns bool True if the file is a GISMO result file"
  },
  "api/BlueM.Wave.Fileformats.HYBNAT_BCS.html": {
    "href": "api/BlueM.Wave.Fileformats.HYBNAT_BCS.html",
    "title": "Class HYBNAT_BCS | BlueM.Wave",
    "summary": "Class HYBNAT_BCS Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for HYBNAT BCS files public class HYBNAT_BCS : TimeSeriesFile Inheritance object TimeSeriesFile HYBNAT_BCS Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HYBNAT_BCS(string) Instanciates a new HYBNAT BCS file public HYBNAT_BCS(string file) Parameters file string Path to file Fields refDate Referencedate for the beginning of the simulation public DateTime refDate Field Value DateTime Remarks default: 01.01.2000 00:00:00 Properties UseImportDialog Set if the import dialog should be used public override bool UseImportDialog { get; } Property Value bool Methods Write_File(ref List<TimeSeries>, string) Write one or multiple series to a BCS file public static void Write_File(ref List<TimeSeries> tsList, string file) Parameters tsList List<TimeSeries> time series to write to file file string path to the bcs file readFile() Reads the time series from the file public override void readFile() readSeriesInfo() Read number of columns and their names public override void readSeriesInfo() verifyFormat(string) Checks if the file is a HYBNAT BCS file public static bool verifyFormat(string file) Parameters file string Path to file Returns bool Boolean Remarks Check is based on file extension and line 1 (must start with \"time;\")"
  },
  "api/BlueM.Wave.Fileformats.HYBNAT_WEL.html": {
    "href": "api/BlueM.Wave.Fileformats.HYBNAT_WEL.html",
    "title": "Class HYBNAT_WEL | BlueM.Wave",
    "summary": "Class HYBNAT_WEL Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for HYBNAT WEL files public class HYBNAT_WEL : TimeSeriesFile Inheritance object TimeSeriesFile HYBNAT_WEL Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HYBNAT_WEL(string) Instanciates a new HYBNAT WEL file public HYBNAT_WEL(string file) Parameters file string Path to file Fields refDate Referencedate for the beginning of the simulation public DateTime refDate Field Value DateTime Remarks default: 01.01.2000 00:00:00 Properties UseImportDialog Set if the import dialog should be used public override bool UseImportDialog { get; } Property Value bool Methods readFile() Reads the time series from the file public override void readFile() readSeriesInfo() Read number of columns and their names public override void readSeriesInfo() verifyFormat(string) Checks if the file is a HYBNAT WEL files public static bool verifyFormat(string file) Parameters file string Path to file Returns bool Boolean Remarks Check is based on line 4 (must start with \"Ganglinien:\")"
  },
  "api/BlueM.Wave.Fileformats.HYDRO_AS_2D.html": {
    "href": "api/BlueM.Wave.Fileformats.HYDRO_AS_2D.html",
    "title": "Class HYDRO_AS_2D | BlueM.Wave",
    "summary": "Class HYDRO_AS_2D Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r Q_Strg.dat, Pegel.dat und BW_TMP.dat von HYDRO_AS-2D public class HYDRO_AS_2D : TimeSeriesFile Inheritance object TimeSeriesFile HYDRO_AS_2D Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors HYDRO_AS_2D(string) Instanziert eine neue HYDRO-AS_2D-Ergebnisdatei public HYDRO_AS_2D(string file) Parameters file string Pfad zur Datei Fields refDate Referenzdatum f체r den Beginn der Simulation public DateTime refDate Field Value DateTime Remarks default: 01.01.2000 00:00:00 Properties UseImportDialog Ob der Importdialog genutzt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Liest die Datei ein public override void readFile() readSeriesInfo() Liest die Anzahl der Spalten und ihre Namen aus public override void readSeriesInfo() verifyFormat(string) Pr체ft, ob es sich um eine Ergebnisdatei von HYDRO_AS-2D handelt public static bool verifyFormat(string file) Parameters file string Pfad zur Datei Returns bool Boolean Remarks Pr체fung erfolgt anhand des Dateinamens (Q_Strg.dat, Pegel.dat oder BW_TMP.dat)"
  },
  "api/BlueM.Wave.Fileformats.HystemExtran_REG.html": {
    "href": "api/BlueM.Wave.Fileformats.HystemExtran_REG.html",
    "title": "Class HystemExtran_REG | BlueM.Wave",
    "summary": "Class HystemExtran_REG Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r das Hystem-Extran REG-Dateiformat public class HystemExtran_REG : TimeSeriesFile Inheritance object TimeSeriesFile HystemExtran_REG Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/Hystem-Extran_REG-Format Constructors HystemExtran_REG(string, bool) public HystemExtran_REG(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods Write_File(TimeSeries, string) Exportiert eine Zeitreihe als REG-Datei public static void Write_File(TimeSeries Reihe, string File) Parameters Reihe TimeSeries Die zu exportierende Zeitreihe File string Pfad zur anzulegenden Datei readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo() verifyFormat(string) Pr체ft, ob es sich um eine HystemExtran-REG-Datei handelt public static bool verifyFormat(string file) Parameters file string Pfad zur Datei Returns bool"
  },
  "api/BlueM.Wave.Fileformats.HystemExtran_WEL.html": {
    "href": "api/BlueM.Wave.Fileformats.HystemExtran_WEL.html",
    "title": "Class HystemExtran_WEL | BlueM.Wave",
    "summary": "Class HystemExtran_WEL Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r das WEL-Dateiformat von Hystem-Extran Bei WEL-Dateien in Hystem handelt es sich immer um Zuflussdaten Format ist festgeschrieben im HystemExtran-Anwenderhandbuch public class HystemExtran_WEL : TimeSeriesFile Inheritance object TimeSeriesFile HystemExtran_WEL Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/WEL-Format Constructors HystemExtran_WEL(string, bool) Konstruktor public HystemExtran_WEL(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Zeitreihen einlesen public override void readFile() readSeriesInfo() Spaltenk철pfe auslesen public override void readSeriesInfo() verifyFormat(string) Pr체ft, ob es sich um eine WEL-Datei f체r Hystem-Extran handelt public static bool verifyFormat(string file) Parameters file string Pfad zur Datei Returns bool"
  },
  "api/BlueM.Wave.Fileformats.JAMS.html": {
    "href": "api/BlueM.Wave.Fileformats.JAMS.html",
    "title": "Class JAMS | BlueM.Wave",
    "summary": "Class JAMS Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for reading JAMS/J2000/J2K timeseries results public class JAMS : TimeSeriesFile Inheritance object TimeSeriesFile JAMS Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks see https://wiki.bluemodel.org/index.php/JAMS_result_files Constructors JAMS(string, bool) public JAMS(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo() verifyFormat(string) Checks whether a file is a readable JAMS timeseries result file public static bool verifyFormat(string file) Parameters file string path to file Returns bool"
  },
  "api/BlueM.Wave.Fileformats.PRMS.html": {
    "href": "api/BlueM.Wave.Fileformats.PRMS.html",
    "title": "Class PRMS | BlueM.Wave",
    "summary": "Class PRMS Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for PRMS result files public class PRMS : TimeSeriesFile Inheritance object TimeSeriesFile PRMS Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Supports annual summary, monthly summary and DPOUT files, for which we assume that the headers are fixed (files always contain the same variables), and Statistic variables result files (statvar.dat) Constructors PRMS(string) Constructor public PRMS(string FileName) Parameters FileName string Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Reads the file public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo() verifyFormat(string) Checks whether a file is in the PRMS OUT format Recognizes annual summary, monthly summary and DPOUT files public static bool verifyFormat(string file) Parameters file string Returns bool Remarks Assumes that headers are fixed (always the same variables)"
  },
  "api/BlueM.Wave.Fileformats.SMB.html": {
    "href": "api/BlueM.Wave.Fileformats.SMB.html",
    "title": "Class SMB | BlueM.Wave",
    "summary": "Class SMB Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r das Simba-Dateiformat (*.SMB) public class SMB : TimeSeriesFile Inheritance object TimeSeriesFile SMB Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/SMB-Format Constructors SMB(string, bool) public SMB(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo()"
  },
  "api/BlueM.Wave.Fileformats.SMUSI_REG.html": {
    "href": "api/BlueM.Wave.Fileformats.SMUSI_REG.html",
    "title": "Class SMUSI_REG | BlueM.Wave",
    "summary": "Class SMUSI_REG Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r das SMUSI REG-Dateiformat (SMUSI-Regendateien) public class SMUSI_REG : TimeSeriesFile Inheritance object TimeSeriesFile SMUSI_REG Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/SMUSI_REG-Format Constructors SMUSI_REG(string, bool) public SMUSI_REG(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods Write_File(TimeSeries, string) Exportiert eine Zeitreihe als SMUSI-REG-Datei public static void Write_File(TimeSeries Reihe, string File) Parameters Reihe TimeSeries Die zu exportierende Zeitreihe File string Pfad zur anzulegenden Datei Remarks Zeitreihe muss 채quidistant mit 5 min Zeitschritt vorliegen! readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo() verifyFormat(string) Pr체ft, ob es sich um eine SMUSI-REG-Datei handelt public static bool verifyFormat(string file) Parameters file string Pfad zur Datei Returns bool"
  },
  "api/BlueM.Wave.Fileformats.SWMM_INTERFACE.Constituent.html": {
    "href": "api/BlueM.Wave.Fileformats.SWMM_INTERFACE.Constituent.html",
    "title": "Struct SWMM_INTERFACE.Constituent | BlueM.Wave",
    "summary": "Struct SWMM_INTERFACE.Constituent Namespace BlueM.Wave.Fileformats Assembly Wave.dll public struct SWMM_INTERFACE.Constituent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Index public int Index Field Value int Type public string Type Field Value string Unit public string Unit Field Value string"
  },
  "api/BlueM.Wave.Fileformats.SWMM_INTERFACE.html": {
    "href": "api/BlueM.Wave.Fileformats.SWMM_INTERFACE.html",
    "title": "Class SWMM_INTERFACE | BlueM.Wave",
    "summary": "Class SWMM_INTERFACE Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for reading and writing the SWMM5 routing interface file format public class SWMM_INTERFACE : TimeSeriesFile Inheritance object TimeSeriesFile SWMM_INTERFACE Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks See https://wiki.bluemodel.org/index.php/SWMM_file_formats Constructors SWMM_INTERFACE(string, bool) Konstruktor public SWMM_INTERFACE(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties MetadataKeys Returns a list of SWMM routing interface file specific metadata keys public static List<string> MetadataKeys { get; } Property Value List<string> UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Zeitintervall public int Zeitintervall { get; set; } Property Value int Methods FlowConversionFactor(string) Returns a conversion factor for converting a flow unit to LPS public static int FlowConversionFactor(string unit) Parameters unit string the flow unit to convert Returns int Write_File(ref List<TimeSeries>, string) Exports a list of time series to SWMM routing interface text format public static void Write_File(ref List<TimeSeries> seriesList, string file) Parameters seriesList List<TimeSeries> list of time series to export file string path to file to export to readFile() Zeitreihen einlesen public override void readFile() readSeriesInfo() Spaltenk철pfe auslesen public override void readSeriesInfo() setDefaultMetadata(TimeSeries) Sets default metadata values for a time series corresponding to the SWMM routing interface file format public static void setDefaultMetadata(TimeSeries ts) Parameters ts TimeSeries verifyFormat(string) Pr체ft, ob es sich um ein Routing Interface File f체r SWMM handelt public static bool verifyFormat(string file) Parameters file string Pfad zur Datei Returns bool"
  },
  "api/BlueM.Wave.Fileformats.SWMM_LID_REPORT.html": {
    "href": "api/BlueM.Wave.Fileformats.SWMM_LID_REPORT.html",
    "title": "Class SWMM_LID_REPORT | BlueM.Wave",
    "summary": "Class SWMM_LID_REPORT Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for reading the SWMM5 LID Report format (*.txt) The format is described in the SWMM format description public class SWMM_LID_REPORT : TimeSeriesFile Inheritance object TimeSeriesFile SWMM_LID_REPORT Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks See https://wiki.bluemodel.org/index.php/SWMM_file_formats Constructors SWMM_LID_REPORT(string, bool) Constructor public SWMM_LID_REPORT(string file, bool ReadAllNow = false) Parameters file string ReadAllNow bool Properties UseImportDialog Indicates whether the ImportDialog should be shown when importing this file format public override bool UseImportDialog { get; } Property Value bool True if the ImportDialog should be shown when importing this file format Methods readFile() Reads the file public override void readFile() readSeriesInfo() Reads series information from the file public override void readSeriesInfo() verifyFormat(string) Checks whether the file is a SWMM LID Report File public static bool verifyFormat(string file) Parameters file string path to file Returns bool"
  },
  "api/BlueM.Wave.Fileformats.SWMM_OUT.html": {
    "href": "api/BlueM.Wave.Fileformats.SWMM_OUT.html",
    "title": "Class SWMM_OUT | BlueM.Wave",
    "summary": "Class SWMM_OUT Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for reading the SWMM binary output format public class SWMM_OUT : TimeSeriesFile Inheritance object TimeSeriesFile SWMM_OUT Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks See https://wiki.bluemodel.org/index.php/SWMM_file_formats Constructors SWMM_OUT(string, bool) public SWMM_OUT(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Fields oSWMM protected SWMM_iface oSWMM Field Value SWMM_iface Properties MetadataKeys Returns a list of SWMM binary output file specific metadata keys public static List<string> MetadataKeys { get; } Property Value List<string> UseImportDialog Indicates whether the ImportDialog should be shown when importing this file format public override bool UseImportDialog { get; } Property Value bool True if the ImportDialog should be shown when importing this file format Methods readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo() setDefaultMetadata(TimeSeries) Sets default metadata values for a time series corresponding to the SWMM binary output file format public static void setDefaultMetadata(TimeSeries ts) Parameters ts TimeSeries"
  },
  "api/BlueM.Wave.Fileformats.SWMM_TIMESERIES.html": {
    "href": "api/BlueM.Wave.Fileformats.SWMM_TIMESERIES.html",
    "title": "Class SWMM_TIMESERIES | BlueM.Wave",
    "summary": "Class SWMM_TIMESERIES Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for SWMM time series file format public class SWMM_TIMESERIES : TimeSeriesFile Inheritance object TimeSeriesFile SWMM_TIMESERIES Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks See https://wiki.bluemodel.org/index.php/SWMM_file_formats Constructors SWMM_TIMESERIES(string, bool) public SWMM_TIMESERIES(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods Write_File(TimeSeries, string) Writes a time series to file in SWMM time series file format public static void Write_File(TimeSeries ts, string path) Parameters ts TimeSeries time series to export path string path to file to write readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo() verifyFormat(string) Checks whether a file is in SWMM time series file format public static bool verifyFormat(string file) Parameters file string path to file Returns bool"
  },
  "api/BlueM.Wave.Fileformats.SydroSQLite.html": {
    "href": "api/BlueM.Wave.Fileformats.SydroSQLite.html",
    "title": "Class SydroSQLite | BlueM.Wave",
    "summary": "Class SydroSQLite Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for the SYDRO SQLite format public class SydroSQLite : TimeSeriesFile Inheritance object TimeSeriesFile SydroSQLite Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SydroSQLite(string, bool) Constructor public SydroSQLite(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Specifies whether the import dialog should be shown during import public override bool UseImportDialog { get; } Property Value bool Remarks Returns True if the class is FlaggedTimeseries, otherwise False Methods readFile() Reads the time series from the file public override void readFile() readSeriesInfo() Reads information about the time series stored in the file public override void readSeriesInfo()"
  },
  "api/BlueM.Wave.Fileformats.UVF.html": {
    "href": "api/BlueM.Wave.Fileformats.UVF.html",
    "title": "Class UVF | BlueM.Wave",
    "summary": "Class UVF Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r UVF Dateiformat Formatbeschreibung: http://aquaplan.de/public_papers/imex/sectionUVF.html public class UVF : TimeSeriesFile Inheritance object TimeSeriesFile UVF Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors UVF(string, bool) Instanziert ein neues UVF Objekt public UVF(string file, bool ReadAllNow = false) Parameters file string Pfad zur Datei ReadAllNow bool Fields ErrorValue Error value public const double ErrorValue = -777 Field Value double Properties MetadataKeys Returns a list of UVF-specific metadata keys public static List<string> MetadataKeys { get; } Property Value List<string> UseImportDialog Ob der Importdialog genutzt werden soll public override bool UseImportDialog { get; } Property Value bool Methods Write_File(ref TimeSeries, string) Exports a time series to a file in the UVF format public static void Write_File(ref TimeSeries ts, string file) Parameters ts TimeSeries the time series to export file string path to the file readFile() Liest die Datei ein public override void readFile() readSeriesInfo() Liest die Metadaten der in der Datei enthaltenen Zeitreihe aus public override void readSeriesInfo() setDefaultMetadata(TimeSeries) Sets default metadata values for a time series corresponding to the UVF file format public static void setDefaultMetadata(TimeSeries ts) Parameters ts TimeSeries verifyFormat(string) Pr체ft, ob es sich um eine UVF-Datei handelt public static bool verifyFormat(string file) Parameters file string Pfad zur Datei Returns bool Boolean Remarks Pr체fung erfolgt anhand der Zeile *Z"
  },
  "api/BlueM.Wave.Fileformats.WBL.html": {
    "href": "api/BlueM.Wave.Fileformats.WBL.html",
    "title": "Class WBL | BlueM.Wave",
    "summary": "Class WBL Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for the SYDRO binary WEL format public class WBL : TimeSeriesFile Inheritance object TimeSeriesFile WBL Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WBL(string, bool) public WBL(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods readFile() Reads the file public override void readFile() readSeriesInfo() Reads series info and datatype from accompanying *.WELINFO file public override void readSeriesInfo() verifyFormat(string) Checks whether a file is a SYDRO binary file public static bool verifyFormat(string file) Parameters file string path to the file to check Returns bool True if verification was successful Remarks Adapted from Fortran routine FILE_GETRECL (formerly ZRE_GETRECL)"
  },
  "api/BlueM.Wave.Fileformats.WEL.html": {
    "href": "api/BlueM.Wave.Fileformats.WEL.html",
    "title": "Class WEL | BlueM.Wave",
    "summary": "Class WEL Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r das WEL-Dateiformat public class WEL : TimeSeriesFile Inheritance object TimeSeriesFile WEL Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/WEL-Format Constructors WEL(string, bool) Konstruktor public WEL(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties DateTimeLength Length of date time stamp public int DateTimeLength { get; set; } Property Value int UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool iLineInfo Number of the line containing general information public int iLineInfo { get; set; } Property Value int Methods extractFromWLZIP(string) Attempts to extract a specified WEL file from a WLZIP file of the same name public static bool extractFromWLZIP(string file) Parameters file string path to WEL file Returns bool True if successful Remarks TALSIM specific readFile() WEL-Datei einlesen public override void readFile() readSeriesInfo() Spalten auslesen public override void readSeriesInfo() verifyFormat(string) Checks whether a file is in the WEL format public static bool verifyFormat(string file) Parameters file string path to the file to check Returns bool True if verification was successful"
  },
  "api/BlueM.Wave.Fileformats.WVP.html": {
    "href": "api/BlueM.Wave.Fileformats.WVP.html",
    "title": "Class WVP | BlueM.Wave",
    "summary": "Class WVP Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for importing a wave project file https://wiki.bluemodel.org/index.php/Wave_project_file public class WVP Inheritance object WVP Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors WVP(string) public WVP(string file) Parameters file string Methods Process() Reads all timeseries from all files as specified in the project file public List<TimeSeries> Process() Returns List<TimeSeries> the list of time series Write_File(ref List<TimeSeries>, string, bool, bool, bool, bool, bool, bool, bool, bool) Write a Wave project file public static void Write_File(ref List<TimeSeries> tsList, string file, bool saveRelativePaths = false, bool saveTitle = false, bool saveUnit = false, bool saveInterpretation = false, bool saveColor = false, bool saveLineStyle = false, bool saveLineWidth = false, bool savePointsVisibility = false) Parameters tsList List<TimeSeries> List of Timeseries to save file string Path to the wvp file to write saveRelativePaths bool Whether to save relative paths saveTitle bool Whether to save titles saveUnit bool Whether to save units saveInterpretation bool Whether to save interpretations saveColor bool Whether to save line colors saveLineStyle bool Whether to save line styles saveLineWidth bool Whether to save line widths savePointsVisibility bool Whether to save points visibility Remarks Only Timeseries with .DataSource.Origin = TimeSeriesDataSource.OriginEnum.FileImport will be saved"
  },
  "api/BlueM.Wave.Fileformats.ZRE.html": {
    "href": "api/BlueM.Wave.Fileformats.ZRE.html",
    "title": "Class ZRE | BlueM.Wave",
    "summary": "Class ZRE Namespace BlueM.Wave.Fileformats Assembly Wave.dll Klasse f체r das ZRE-Dateiformat public class ZRE : TimeSeriesFile Inheritance object TimeSeriesFile ZRE Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.setDefaultMetadata(TimeSeries) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] TimeSeriesFile.MetadataKeys object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Format siehe https://wiki.bluemodel.org/index.php/ZRE-Format Constructors ZRE(string, bool) public ZRE(string FileName, bool ReadAllNow = false) Parameters FileName string ReadAllNow bool Properties UseImportDialog Gibt an, ob beim Import des Dateiformats der Importdialog angezeigt werden soll public override bool UseImportDialog { get; } Property Value bool Methods Write_File(TimeSeries, string) Exportiert eine Zeitreihe als ZRE-Datei public static void Write_File(TimeSeries Reihe, string File) Parameters Reihe TimeSeries Die zu exportierende Zeitreihe File string Pfad zur anzulegenden Datei readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public override void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public override void readSeriesInfo()"
  },
  "api/BlueM.Wave.Fileformats.ZRXP.html": {
    "href": "api/BlueM.Wave.Fileformats.ZRXP.html",
    "title": "Class ZRXP | BlueM.Wave",
    "summary": "Class ZRXP Namespace BlueM.Wave.Fileformats Assembly Wave.dll Class for the ZRXP file format Format description: https://www.kisters.de/fileadmin/user_upload/Wasser/Downloads/ZRXP3.0_DE.pdf public class ZRXP : TimeSeriesFile Inheritance object TimeSeriesFile ZRXP Inherited Members TimeSeriesFile.TimeSeries TimeSeriesFile.get_getTimeSeries(int) TimeSeriesFile.get_getTimeSeries(string) TimeSeriesFile.selectAllSeries() TimeSeriesFile.selectSeries(int) TimeSeriesFile.selectSeries(string) TimeSeriesFile.getFileExtension(TimeSeriesFile.FileTypes) TimeSeriesFile.SupportsMultipleSeries(TimeSeriesFile.FileTypes) TimeSeriesFile.getFileType(string) TimeSeriesFile.getInstance(string, TimeSeriesFile.FileTypes) TimeSeriesFile.Encoding TimeSeriesFile.FileMetadata TimeSeriesFile.File TimeSeriesFile.IsColumnSeparated TimeSeriesFile.Separator TimeSeriesFile.Dateformat TimeSeriesFile.DecimalSeparator TimeSeriesFile.iLineHeadings TimeSeriesFile.iLineUnits TimeSeriesFile.iLineData TimeSeriesFile.nLinesHeader TimeSeriesFile.UseUnits TimeSeriesFile.ColumnWidth TimeSeriesFile.ColumnOffset TimeSeriesFile.DateTimeColumnIndex TimeSeriesFile.TimeSeriesInfos TimeSeriesFile.SelectedSeries TimeSeriesFile.TitleSuffix TimeSeriesFile.getTimeSeries[int] TimeSeriesFile.getTimeSeries[string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ZRXP(string, bool) Instantiates a new ZRXP object public ZRXP(string file, bool ReadAllNow = false) Parameters file string path to the file ReadAllNow bool Properties MetadataKeys Returns a list of ZRXP-specific metadata keys public static List<string> MetadataKeys { get; } Property Value List<string> UseImportDialog Specifies whether to use the file import dialog public override bool UseImportDialog { get; } Property Value bool Methods Write_File(ref TimeSeries, string) Exports a time series to a file in the ZRXP format public static void Write_File(ref TimeSeries ts, string file) Parameters ts TimeSeries the time series to export file string path to the file readFile() reads the file public override void readFile() readSeriesInfo() Reads the metadata from the file public override void readSeriesInfo() setDefaultMetadata(TimeSeries) Sets default metadata values for a time series corresponding to the ZRXP file format public static void setDefaultMetadata(TimeSeries ts) Parameters ts TimeSeries verifyFormat(string) Checks whether a file conforms with the ZRXP-format public static bool verifyFormat(string file) Parameters file string path to file Returns bool Boolean Remarks Checks whether the first or second line starts with the string \"#ZRXP\""
  },
  "api/BlueM.Wave.Fileformats.html": {
    "href": "api/BlueM.Wave.Fileformats.html",
    "title": "Namespace BlueM.Wave.Fileformats | BlueM.Wave",
    "summary": "Namespace BlueM.Wave.Fileformats Classes ASC Klasse f체r ASC-Dateiformat (SMUSI) BIN Klasse f체r das SYDRO Bin채rformat CSV Klasse f체r generisches Textformat DFS0 Class for importing the DHI MIKE Dfs0 format Requires the DHI.DFS Nuget package: https://www.nuget.org/packages/DHI.DFS/ Docs: https://docs.mikepoweredbydhi.com/core_libraries/dfs/dfs_api/ https://docs.mikepoweredbydhi.com/core_libraries/dfs/dfs-file-formats/#dfs0-file https://docs.mikepoweredbydhi.com/SDK_UserGuide/#eum-quantity Code is loosely based on the following examples: https://github.com/DHI/MIKECore-Examples/blob/master/Examples/CSharp/ExamplesDfs0.cs FEWS_PI Class for the Delft-FEWS published interface timeseries format Format description: https://publicwiki.deltares.nl/spaces/FEWSDOC/pages/8683960/Delft-Fews+Published+Interface+timeseries+Format+PI+Import XML schema: https://fews.wldelft.nl/schemas/version1.0/pi-schemas/pi_timeseries.xsd FEWS_PI.XMLDate FEWS_PI.XMLEvent FEWS_PI.XMLHeader FEWS_PI.XMLSeries FEWS_PI.XMLTimeSeries Object representation of the Delft-FEWS PI timeseries XML structure FEWS_PI.XMLTimeStep GBL Class for the GINA binary WEL format GINA_WEL Class for the GINA WEL file format It is essentially a CSV format, this class only contains a method for detecting the format and overrides the CSV import settings in the constructor GISMO_WEL Class for importing GISMO result files (.CSV,.ASC) For information about GISMO refer to http://www.sydro.de/ For file format info refer to https://wiki.bluemodel.org/index.php/WEL-Format_%28GISMO%29 HYBNAT_BCS Class for HYBNAT BCS files HYBNAT_WEL Class for HYBNAT WEL files HYDRO_AS_2D Klasse f체r Q_Strg.dat, Pegel.dat und BW_TMP.dat von HYDRO_AS-2D HystemExtran_REG Klasse f체r das Hystem-Extran REG-Dateiformat HystemExtran_WEL Klasse f체r das WEL-Dateiformat von Hystem-Extran Bei WEL-Dateien in Hystem handelt es sich immer um Zuflussdaten Format ist festgeschrieben im HystemExtran-Anwenderhandbuch JAMS Class for reading JAMS/J2000/J2K timeseries results PRMS Class for PRMS result files SMB Klasse f체r das Simba-Dateiformat (*.SMB) SMUSI_REG Klasse f체r das SMUSI REG-Dateiformat (SMUSI-Regendateien) SWMM_INTERFACE Class for reading and writing the SWMM5 routing interface file format SWMM_LID_REPORT Class for reading the SWMM5 LID Report format (*.txt) The format is described in the SWMM format description SWMM_OUT Class for reading the SWMM binary output format SWMM_TIMESERIES Class for SWMM time series file format SydroSQLite Class for the SYDRO SQLite format UVF Klasse f체r UVF Dateiformat Formatbeschreibung: http://aquaplan.de/public_papers/imex/sectionUVF.html WBL Class for the SYDRO binary WEL format WEL Klasse f체r das WEL-Dateiformat WVP Class for importing a wave project file https://wiki.bluemodel.org/index.php/Wave_project_file ZRE Klasse f체r das ZRE-Dateiformat ZRXP Class for the ZRXP file format Format description: https://www.kisters.de/fileadmin/user_upload/Wasser/Downloads/ZRXP3.0_DE.pdf Structs SWMM_INTERFACE.Constituent"
  },
  "api/BlueM.Wave.Helpers.Direction.html": {
    "href": "api/BlueM.Wave.Helpers.Direction.html",
    "title": "Enum Helpers.Direction | BlueM.Wave",
    "summary": "Enum Helpers.Direction Namespace BlueM.Wave Assembly Wave.dll public enum Helpers.Direction Fields Down = 1 Up = 0"
  },
  "api/BlueM.Wave.Helpers.html": {
    "href": "api/BlueM.Wave.Helpers.html",
    "title": "Class Helpers | BlueM.Wave",
    "summary": "Class Helpers Namespace BlueM.Wave Assembly Wave.dll [StandardModule] public sealed class Helpers Inheritance object Helpers Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties CurrentDateFormat Returns the current date time format as set by the operating system public static string CurrentDateFormat { get; } Property Value string CurrentListSeparator Returns the list separator as set by the operating system (e.g. \",\" or \";\") public static string CurrentListSeparator { get; } Property Value string CurrentNumberFormat Returns the number format as set by the operating system public static NumberFormatInfo CurrentNumberFormat { get; } Property Value NumberFormatInfo DateFormats Date formats public static Dictionary<string, string> DateFormats { get; } Property Value Dictionary<string, string> Dictionary of available DateFormats Remarks see https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings DefaultEncoding Default Encoding (as set by the operating system, usually ISO-8859-1) public static Encoding DefaultEncoding { get; } Property Value Encoding DefaultNumberFormat Default NumberFormat public static NumberFormatInfo DefaultNumberFormat { get; } Property Value NumberFormatInfo NumberFormatInfo instance with decimal separator \".\" and no NumberGroupSeparator Methods CalendarMonths() Returns a list of calendar months from January to December public static List<Month> CalendarMonths() Returns List<Month> GetRelativePath(string, string) Creates a relative path from one file or folder to another. public static string GetRelativePath(string fromPath, string toPath) Parameters fromPath string Contains the directory that defines the start of the relative path. toPath string Contains the path that defines the endpoint of the relative path. Returns string The relative path from the start directory to the end path. Remarks This function is a replacement for IO.Path.GetRelativePath() which is only available in later .NET versions. Based on C# code from https://stackoverflow.com/a/32113484 Exceptions ArgumentNullException fromPath or toPath is null. UriFormatException InvalidOperationException StringToDouble(string, NumberFormatInfo) Converts a string to a double public static double StringToDouble(string str, NumberFormatInfo format = null) Parameters str string string to be converted format NumberFormatInfo optional NumberFormatInfo object to use for the conversion. If not provided, the DefaultNumberInfo is used. Returns double Double value, set to NaN if the string was not parseable. NaN and +-Infinity in the input string are recognized and converted to the correspoing Double value. getColorPalette(string) Returns a specified color palette public static Color[] getColorPalette(string name = \"Material\") Parameters name string Available color palettes are \"Material\", \"Distinct\", \"Color Wheel\" and \"Random\". Defaults to \"Material\". Returns Color[] A color palette"
  },
  "api/BlueM.Wave.Log.LogClearedEventHandler.html": {
    "href": "api/BlueM.Wave.Log.LogClearedEventHandler.html",
    "title": "Delegate Log.LogClearedEventHandler | BlueM.Wave",
    "summary": "Delegate Log.LogClearedEventHandler Namespace BlueM.Wave Assembly Wave.dll public delegate void Log.LogClearedEventHandler() Constructors LogClearedEventHandler(object, IntPtr) public LogClearedEventHandler(object TargetObject, IntPtr TargetMethod) Parameters TargetObject object TargetMethod IntPtr Methods BeginInvoke(AsyncCallback, object) public virtual IAsyncResult BeginInvoke(AsyncCallback DelegateCallback, object DelegateAsyncState) Parameters DelegateCallback AsyncCallback DelegateAsyncState object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult DelegateAsyncResult) Parameters DelegateAsyncResult IAsyncResult Invoke() public virtual void Invoke()"
  },
  "api/BlueM.Wave.Log.LogMsgAddedEventHandler.html": {
    "href": "api/BlueM.Wave.Log.LogMsgAddedEventHandler.html",
    "title": "Delegate Log.LogMsgAddedEventHandler | BlueM.Wave",
    "summary": "Delegate Log.LogMsgAddedEventHandler Namespace BlueM.Wave Assembly Wave.dll public delegate void Log.LogMsgAddedEventHandler(Log.levels level, string msg) Parameters level Log.levels msg string Constructors LogMsgAddedEventHandler(object, IntPtr) public LogMsgAddedEventHandler(object TargetObject, IntPtr TargetMethod) Parameters TargetObject object TargetMethod IntPtr Methods BeginInvoke(levels, string, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(Log.levels level, string msg, AsyncCallback DelegateCallback, object DelegateAsyncState) Parameters level Log.levels msg string DelegateCallback AsyncCallback DelegateAsyncState object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult DelegateAsyncResult) Parameters DelegateAsyncResult IAsyncResult Invoke(levels, string) public virtual void Invoke(Log.levels level, string msg) Parameters level Log.levels msg string"
  },
  "api/BlueM.Wave.Log.html": {
    "href": "api/BlueM.Wave.Log.html",
    "title": "Class Log | BlueM.Wave",
    "summary": "Class Log Namespace BlueM.Wave Assembly Wave.dll Log [StandardModule] public sealed class Log Inheritance object Log Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Fields logMessages public static List<KeyValuePair<Log.levels, string>> logMessages Field Value List<KeyValuePair<Log.levels, string>> Methods AddLogEntry(levels, string) Adds a log entry public static void AddLogEntry(Log.levels level, string msg) Parameters level Log.levels log level msg string message ClearLog() Log zur체cksetzen (allen Text l철schen) public static void ClearLog() Events LogCleared Is triggered when the log was cleared public static event Log.LogClearedEventHandler LogCleared Event Type Log.LogClearedEventHandler LogMsgAdded Is triggered after a log message was added public static event Log.LogMsgAddedEventHandler LogMsgAdded Event Type Log.LogMsgAddedEventHandler"
  },
  "api/BlueM.Wave.Log.levels.html": {
    "href": "api/BlueM.Wave.Log.levels.html",
    "title": "Enum Log.levels | BlueM.Wave",
    "summary": "Enum Log.levels Namespace BlueM.Wave Assembly Wave.dll Log levels public enum Log.levels : short Fields debug = 0 error = 3 info = 1 warning = 2"
  },
  "api/BlueM.Wave.Metadata.html": {
    "href": "api/BlueM.Wave.Metadata.html",
    "title": "Class Metadata | BlueM.Wave",
    "summary": "Class Metadata Namespace BlueM.Wave Assembly Wave.dll Class representing time series metadata public class Metadata : Dictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback Inheritance object Dictionary<string, string> Metadata Implements IDictionary<string, string> ICollection<KeyValuePair<string, string>> IDictionary ICollection IReadOnlyDictionary<string, string> IReadOnlyCollection<KeyValuePair<string, string>> IEnumerable<KeyValuePair<string, string>> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<string, string>.Add(string, string) Dictionary<string, string>.Clear() Dictionary<string, string>.ContainsKey(string) Dictionary<string, string>.ContainsValue(string) Dictionary<string, string>.GetEnumerator() Dictionary<string, string>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, string>.OnDeserialization(object) Dictionary<string, string>.Remove(string) Dictionary<string, string>.TryGetValue(string, out string) Dictionary<string, string>.Comparer Dictionary<string, string>.Count Dictionary<string, string>.Keys Dictionary<string, string>.Values Dictionary<string, string>.this[string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Acts as a Dictionary(Of String, String) Constructors Metadata() public Metadata() Methods AddKeys(List<string>) Adds a list of keys with empty values public void AddKeys(List<string> keys) Parameters keys List<string> A list of keys to add Remarks Values of keys that are already present are not overwritten Copy() Returns a copy of the metadata public Metadata Copy() Returns Metadata"
  },
  "api/BlueM.Wave.Month.html": {
    "href": "api/BlueM.Wave.Month.html",
    "title": "Class Month | BlueM.Wave",
    "summary": "Class Month Namespace BlueM.Wave Assembly Wave.dll Class representing a calendar month public class Month Inheritance object Month Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Month(int, string) Constructor public Month(int number, string name) Parameters number int Number of the month (1 to 12) name string Name of the month Fields name Name of the month public string name Field Value string number Number of the month (1 to 12) public int number Field Value int Methods ToString() Returns the name of the month public override string ToString() Returns string"
  },
  "api/BlueM.Wave.SettingsDialog.html": {
    "href": "api/BlueM.Wave.SettingsDialog.html",
    "title": "Class SettingsDialog | BlueM.Wave",
    "summary": "Class SettingsDialog Namespace BlueM.Wave Assembly Wave.dll [DesignerGenerated] public class SettingsDialog : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form SettingsDialog Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.Menu Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiParent Form.MergedMenu Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateAccessibilityInstance() Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(IntPtr) Control.FromHandle(IntPtr) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnGotFocus(EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnMove(EventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.RescaleConstantsForDpi(int, int) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(IntPtr, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenu Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Events Component.Container Component.DesignMode Component.Disposed MarshalByRefObject.MemberwiseClone(bool) MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.CreateObjRef(Type) object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SettingsDialog() public SettingsDialog() Methods Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/BlueM.Wave.TimeSeries.InterpretationEnum.html": {
    "href": "api/BlueM.Wave.TimeSeries.InterpretationEnum.html",
    "title": "Enum TimeSeries.InterpretationEnum | BlueM.Wave",
    "summary": "Enum TimeSeries.InterpretationEnum Namespace BlueM.Wave Assembly Wave.dll Interpretations public enum TimeSeries.InterpretationEnum Fields BlockLeft = 3 BlockRight = 2 Cumulative = 4 CumulativePerTimestep = 5 Instantaneous = 1 Undefined = 99"
  },
  "api/BlueM.Wave.TimeSeries.TimeStepTypeEnum.html": {
    "href": "api/BlueM.Wave.TimeSeries.TimeStepTypeEnum.html",
    "title": "Enum TimeSeries.TimeStepTypeEnum | BlueM.Wave",
    "summary": "Enum TimeSeries.TimeStepTypeEnum Namespace BlueM.Wave Assembly Wave.dll Timestep types public enum TimeSeries.TimeStepTypeEnum : short Fields Day = 4 Hour = 5 Minute = 6 Month = 2 Second = 7 Week = 3 Year = 1"
  },
  "api/BlueM.Wave.TimeSeries.html": {
    "href": "api/BlueM.Wave.TimeSeries.html",
    "title": "Class TimeSeries | BlueM.Wave",
    "summary": "Class TimeSeries Namespace BlueM.Wave Assembly Wave.dll Class representing a time series public class TimeSeries Inheritance object TimeSeries Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks A time series consists of a list of nodes (date, value) and associated metadata Constructors TimeSeries() Default Constructor public TimeSeries() TimeSeries(string) Constructor public TimeSeries(string title) Parameters title string Title of the time series Properties Average Returns the average value of the time series public double Average { get; } Property Value double Remarks Simple average calculation without regard for time DataSource The original datasource of the time series public TimeSeriesDataSource DataSource { get; set; } Property Value TimeSeriesDataSource Dates The time series' dates public IList<DateTime> Dates { get; } Property Value IList<DateTime> DisplayOptions Options for displaying the time series public TimeSeriesDisplayOptions DisplayOptions { get; set; } Property Value TimeSeriesDisplayOptions EndDate Returns the end date of the time series public DateTime EndDate { get; } Property Value DateTime FirstValue Returns the first value of the time series public double FirstValue { get; } Property Value double Id Unique Id public int Id { get; } Property Value int Interpretation The time series' interpretation public TimeSeries.InterpretationEnum Interpretation { get; set; } Property Value TimeSeries.InterpretationEnum LastValue Returns the last value of the time series public double LastValue { get; } Property Value double Length The time series' length (number of nodes) public int Length { get; } Property Value int Maximum Returns the maximum value of the time series public double Maximum { get; } Property Value double Maximum[DateTime, DateTime] Returns the maximum value of the time series within a defined time period (inclusively) public double Maximum[DateTime startdate, DateTime enddate] { get; } Parameters startdate DateTime enddate DateTime Property Value double MaximumNode Returns the node with the maximum value of the time series public KeyValuePair<DateTime, double> MaximumNode { get; } Property Value KeyValuePair<DateTime, double> MaximumNode[DateTime, DateTime] Returns the node with the maximum value of the time series within a defined time period (inclusively) public KeyValuePair<DateTime, double> MaximumNode[DateTime startdate, DateTime enddate] { get; } Parameters startdate DateTime enddate DateTime Property Value KeyValuePair<DateTime, double> Metadata The time series' metadata public Metadata Metadata { get; set; } Property Value Metadata MetadataText The time series' metadata formatted as a single string public string MetadataText { get; } Property Value string Remarks Empty entries are omitted from the string Minimum Returns the minimum value of the time series public double Minimum { get; } Property Value double Minimum[DateTime, DateTime] Returns the minimum value of the time series within a defined time period (inclusively) public double Minimum[DateTime startdate, DateTime enddate] { get; } Parameters startdate DateTime enddate DateTime Property Value double NaNCount The number of NaN and Infinity nodes public int NaNCount { get; } Property Value int NaNPeriods Returns the list of time periods (range, count) consisting of NaN nodes public List<(DateRange range, int count)> NaNPeriods { get; } Property Value List<(DateRange range, int count)> Nodes The time series' nodes public SortedList<DateTime, double> Nodes { get; } Property Value SortedList<DateTime, double> Nodes[DateTime] Returns the value at timestamp t public double Nodes[DateTime t] { get; } Parameters t DateTime Property Value double Nodes[DateTime, DateTime] The time series' nodes within a defined time period (inclusively) public SortedList<DateTime, double> Nodes[DateTime startdate, DateTime enddate] { get; } Parameters startdate DateTime enddate DateTime Property Value SortedList<DateTime, double> NodesClean The time series' nodes without NaN and Infinity values public SortedList<DateTime, double> NodesClean { get; } Property Value SortedList<DateTime, double> Remarks The cleaned nodes are cached and only created once per instance NodesClean[DateTime, DateTime] The time series' nodes without NaN and Infinity values within a defined time period (inclusively) public SortedList<DateTime, double> NodesClean[DateTime startdate, DateTime enddate] { get; } Parameters startdate DateTime enddate DateTime Property Value SortedList<DateTime, double> StartDate Returns the start date of the time series public DateTime StartDate { get; } Property Value DateTime Sum Returns the sum of the time series' values public double Sum { get; } Property Value double Title Title of the time series public string Title { get; set; } Property Value string Unit The unit of the the time series' values public string Unit { get; set; } Property Value string Values The time series' values public IList<double> Values { get; } Property Value IList<double> Volume Returns the volume of the time series (values integrated over time) public double Volume { get; } Property Value double Remarks Only works for time-based units that end with \"/s\", \"/min\", \"/h\" or \"/d\" and interpretations Instantaneous, BlockLeft and BlockRight. Otherwise returns NaN. getUniqueID Returns a new unique ID public static int getUniqueID { get; } Property Value int Methods AddNode(DateTime, double) Adds a node to the time series public void AddNode(DateTime _date, double _value) Parameters _date DateTime Date _value double Value Remarks If the given date already exists, the new node is discarded and a warning is written to the log AddTimeInterval(DateTime, TimeStepTypeEnum, int) Returns a new DateTime offset from the given base DateTime by the specified interval public static DateTime AddTimeInterval(DateTime t, TimeSeries.TimeStepTypeEnum timesteptype, int timestepinterval) Parameters t DateTime Base DateTime from which to offset timesteptype TimeSeries.TimeStepTypeEnum The type of interval to offset timestepinterval int The number of intervals to offset (can be negative in order to subtract) Returns DateTime The offset DateTime Remarks Does not check for exceeding DateTime.MaxValue or going below DateTime.MinValue. Handles leap days and varying month lengths correctly when offsetting by years or months. Append(TimeSeries) Appends a time series public void Append(TimeSeries series2) Parameters series2 TimeSeries series to be appended Remarks in the case of an overlap between the two series, the nodes of the appended series within the overlap are discarded ChangeTimestep(TimeStepTypeEnum, int, DateTime, InterpretationEnum) Returns a new, equidistant time series with the specified timestep public TimeSeries ChangeTimestep(TimeSeries.TimeStepTypeEnum timesteptype, int timestepinterval, DateTime startdate, TimeSeries.InterpretationEnum outputInterpretation = InterpretationEnum.Undefined) Parameters timesteptype TimeSeries.TimeStepTypeEnum The type of timestep interval timestepinterval int The number of intervals that make up each timestep startdate DateTime Start date for the new time series outputInterpretation TimeSeries.InterpretationEnum Optional interpretation to use for the output timeseries. If not defined, the original interpretation is preserved, if possible Returns TimeSeries The new time series Remarks Output interpretation Instantaneous is not implemented, because it would require considering a time interval 0.5 * dt to the left and right of the output timestamps which causes issues with timestep intervals of type Month (and also headaches). Time steps that are not fully within the time series are not included in the result time series. Time steps within which at least one node contain NaN values also get the value NaN. TODO: Support more interpretations Allow handling NaN values (e.g. as 0)? Clone(bool) Clones a time series public TimeSeries Clone(bool preserveId = false) Parameters preserveId bool if True, the Id is preserved, otherwise a new unique Id is assigned (default) Returns TimeSeries Cut(TimeSeries) Cut the time series to the timespan of another time series public void Cut(TimeSeries series2) Parameters series2 TimeSeries the time series to whose timespan the time series should be cut Cut(DateTime, DateTime) Cut a time series using start and end dates public void Cut(DateTime _start, DateTime _end) Parameters _start DateTime start date _end DateTime end date Remarks Removes all nodes before the start date and after the end date. If there is no node with the exact start date, the closest node before the start date is also kept. If there is no node with the exact end date, the closest node after the end date is also kept. IntegrateVolume(DateTime, double, DateTime, double, InterpretationEnum, TimeStepTypeEnum) Integrates the volume between two nodes while respecting interpretation and unit public static double IntegrateVolume(DateTime t1, double v1, DateTime t2, double v2, TimeSeries.InterpretationEnum interpretation, TimeSeries.TimeStepTypeEnum unitTimeStepType = TimeStepTypeEnum.Second) Parameters t1 DateTime First timestamp v1 double First value t2 DateTime Second timestamp v2 double Second value interpretation TimeSeries.InterpretationEnum Interpretation to use unitTimeStepType TimeSeries.TimeStepTypeEnum TimeStepType of the unit, default is per second Returns double The volume InterpolateValue(DateTime, double, DateTime, double, DateTime, InterpretationEnum) Interpolates a value between two nodes while respecting the interpretation public static double InterpolateValue(DateTime t1, double v1, DateTime t2, double v2, DateTime t, TimeSeries.InterpretationEnum interpretation) Parameters t1 DateTime First timestamp v1 double First value t2 DateTime Second timestamp v2 double Second value t DateTime Timestamp at which to interpolate interpretation TimeSeries.InterpretationEnum Interpretation to use Returns double The interpolated value ShiftTime(int, TimeStepTypeEnum) Returns a new time series with all timestamps shifted by the specified interval public TimeSeries ShiftTime(int timestepInterval, TimeSeries.TimeStepTypeEnum timestepType) Parameters timestepInterval int The number of intervals to offset (can be negative in order to subtract) timestepType TimeSeries.TimeStepTypeEnum The type of interval to offset Returns TimeSeries The shifted timeseries Remarks Shifting by months may cause the loss of data points due to varying month lengths. Shifting by years may cause the loss of data points due to leap days. SplitHydroYears(int) Splits a time series into individual series for each hydrological year public Dictionary<int, TimeSeries> SplitHydroYears(int startMonth = 11) Parameters startMonth int the month with which the hydrological year starts. Default = 11 (November) Returns Dictionary<int, TimeSeries> A dictionary of time series, the key represents the calendar year in which each hydrological year starts Synchronize(ref TimeSeries, ref TimeSeries) Synchronizes two timeseries in-place by only keeping the common timestamps public static void Synchronize(ref TimeSeries ts1, ref TimeSeries ts2) Parameters ts1 TimeSeries First timeseries ts2 TimeSeries Second timeseries ToString() Returns the time series' title public override string ToString() Returns string UpdateNode(DateTime, double) Updates the value of an existing node public void UpdateNode(DateTime _date, double _value) Parameters _date DateTime Date _value double Value convertErrorValues(params double[]) Creates a copy of the time series in which all nodes with specified error values are converted to NaN public TimeSeries convertErrorValues(params double[] errorvalues) Parameters errorvalues double[] array of error values to ignore Returns TimeSeries the cleaned time series Remarks a tolerance of 0.0001 is used to compare series values to errorvalues getWert(string) Calculate a metric from the time series' values public double getWert(string WertTyp) Parameters WertTyp string MaxWert, MinWert, Average, AnfWert, EndWert, Summe Returns double the calculated metric Remarks Obsolete, kept for backwards compatibility with BlueM.Opt get_Maximum(DateTime, DateTime) public double get_Maximum(DateTime startdate, DateTime enddate) Parameters startdate DateTime enddate DateTime Returns double get_MaximumNode(DateTime, DateTime) public KeyValuePair<DateTime, double> get_MaximumNode(DateTime startdate, DateTime enddate) Parameters startdate DateTime enddate DateTime Returns KeyValuePair<DateTime, double> get_Minimum(DateTime, DateTime) public double get_Minimum(DateTime startdate, DateTime enddate) Parameters startdate DateTime enddate DateTime Returns double get_Nodes(DateTime) public double get_Nodes(DateTime t) Parameters t DateTime Returns double get_Nodes(DateTime, DateTime) public SortedList<DateTime, double> get_Nodes(DateTime startdate, DateTime enddate) Parameters startdate DateTime enddate DateTime Returns SortedList<DateTime, double> get_NodesClean(DateTime, DateTime) public SortedList<DateTime, double> get_NodesClean(DateTime startdate, DateTime enddate) Parameters startdate DateTime enddate DateTime Returns SortedList<DateTime, double> removeNaNValues() Returns a copy of the time series without the nodes having NaN and Infinity values public TimeSeries removeNaNValues() Returns TimeSeries the cleaned time series"
  },
  "api/BlueM.Wave.TimeSeriesCollection.html": {
    "href": "api/BlueM.Wave.TimeSeriesCollection.html",
    "title": "Class TimeSeriesCollection | BlueM.Wave",
    "summary": "Class TimeSeriesCollection Namespace BlueM.Wave Assembly Wave.dll Collection of TimeSeries Implemented as an ordered dictionary with Ids as keys and TimeSeries as values public class TimeSeriesCollection : IDictionary<int, TimeSeries>, ICollection<KeyValuePair<int, TimeSeries>>, IEnumerable<KeyValuePair<int, TimeSeries>>, IEnumerable Inheritance object TimeSeriesCollection Implements IDictionary<int, TimeSeries> ICollection<KeyValuePair<int, TimeSeries>> IEnumerable<KeyValuePair<int, TimeSeries>> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeSeriesCollection() public TimeSeriesCollection() Properties ToList Gets a List(Of TimeSeries) containing the TimeSeries in the TimeSeriesCollection public List<TimeSeries> ToList { get; } Property Value List<TimeSeries> A List(Of TimeSeries) containing the TimeSeries in the TimeSeriesCollection Methods Add(TimeSeries) Adds a TimeSeries to the TimeSeriesCollection public void Add(TimeSeries ts) Parameters ts TimeSeries The TimeSeries to add Reorder(List<int>) Reorders the TimeSeries contained in the TimeSeriesCollection according to the specified list of Ids public void Reorder(List<int> ids) Parameters ids List<int> List of Ids in the new order Reorder(int, Direction) Reorders a TimeSeries within the collection public void Reorder(int id, Helpers.Direction direction) Parameters id int Id of the TimeSeries to reorder direction Helpers.Direction Direction Explicit Interface Implementations Add(KeyValuePair<int, TimeSeries>) void Add(KeyValuePair<int, TimeSeries> item) Parameters item KeyValuePair<int, TimeSeries> Add(int, TimeSeries) Adds a TimeSeries with the provided Id to the TimeSeriesCollection void Add(int Id, TimeSeries ts) Parameters Id int The Id of the Timeseries to add ts TimeSeries The TimeSeries to add Clear() Revomes all TimeSeries from the TimeSeriesCollection void Clear() Contains(KeyValuePair<int, TimeSeries>) bool Contains(KeyValuePair<int, TimeSeries> item) Parameters item KeyValuePair<int, TimeSeries> Returns bool ContainsId(int) Determines whether the TimeSeriesCollection contains a TimeSeries with the specified Id bool ContainsId(int Id) Parameters Id int The Id to locate in the TimeSeriesCollection Returns bool True if the TimeSeriesCollection contains a TimeSeries with the Id; otherwise, False CopyTo(KeyValuePair<int, TimeSeries>[], int) void CopyTo(KeyValuePair<int, TimeSeries>[] array, int arrayIndex) Parameters array KeyValuePair<int, TimeSeries>[] arrayIndex int Count Gets the number of TimeSeries contained in the TimeSeriesCollection int Count { get; } Returns int The number of TimeSeries contained in the TimeSeriesCollection GetEnumerator() Returns an enumerator that iterates through the TimeSeriesCollection IEnumerator<KeyValuePair<int, TimeSeries>> GetEnumerator() Returns IEnumerator<KeyValuePair<int, TimeSeries>> An enumerator that can be used to iterate through the TimeSeriesCollection Ids Gets an ICollection(Of Integer) containing the Ids in the TimeSeriesCollection ICollection<int> Ids { get; } Returns ICollection<int> An ICollection(Of Integer) containing the Ids in the TimeSeriesCollection IsReadOnly Gets a value indicating whether the TimeSeriesCollection is read-only bool IsReadOnly { get; } Returns bool True if the TimeSeriesCollection is read-only; otherwise, False this[int] Gets or sets the TimeSeries with the specified Id TimeSeries this[int Id] { get; set; } Parameters Id int The Id of the TimeSeries to get or set Returns TimeSeries The TimeSeries with the specified Id Remove(KeyValuePair<int, TimeSeries>) bool Remove(KeyValuePair<int, TimeSeries> item) Parameters item KeyValuePair<int, TimeSeries> Returns bool Remove(int) Removes the TimeSeries with the specified Id from the TimeSeriesCollection bool Remove(int Id) Parameters Id int The Id of the TimneSeries to remove Returns bool True if the TimeSeries is successfully removed; otherwise, False TryGetTimeSeries(int, ref TimeSeries) Gets the TimeSeries associated with the specified Id bool TryGetTimeSeries(int Id, ref TimeSeries ts) Parameters Id int The Id of the TimeSeries to get ts TimeSeries When this method returns, the TimeSeries associated with the specified Id, if the Id is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. Returns bool True if the TimeSeriesCollection contains a TimeSeries with the specified Id; otherwise False Values Gets an ICollection(Of TimeSeries) containing the TimeSeries in the TimeSeriesCollection ICollection<TimeSeries> Values { get; } Returns ICollection<TimeSeries> An ICollection(Of TimeSeries) containing the TimeSeries in the TimeSeriesCollection"
  },
  "api/BlueM.Wave.TimeSeriesDataSource.OriginEnum.html": {
    "href": "api/BlueM.Wave.TimeSeriesDataSource.OriginEnum.html",
    "title": "Enum TimeSeriesDataSource.OriginEnum | BlueM.Wave",
    "summary": "Enum TimeSeriesDataSource.OriginEnum Namespace BlueM.Wave Assembly Wave.dll Origin types public enum TimeSeriesDataSource.OriginEnum Fields AnalysisResult = 1 Clipboard = 3 FileImport = 0 ManuallyEntered = 2 Undefined = 4"
  },
  "api/BlueM.Wave.TimeSeriesDataSource.html": {
    "href": "api/BlueM.Wave.TimeSeriesDataSource.html",
    "title": "Class TimeSeriesDataSource | BlueM.Wave",
    "summary": "Class TimeSeriesDataSource Namespace BlueM.Wave Assembly Wave.dll Stores information about the datasource of a time series public class TimeSeriesDataSource Inheritance object TimeSeriesDataSource Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeSeriesDataSource(OriginEnum) Creates a new TimeSeriesDataSource instance of a specific origin type (used for origins other than FileImport) public TimeSeriesDataSource(TimeSeriesDataSource.OriginEnum origin) Parameters origin TimeSeriesDataSource.OriginEnum The origin type TimeSeriesDataSource(string, string) Creates a new TimeSeriesDataSource instance with origin type FileImport public TimeSeriesDataSource(string filepath, string title) Parameters filepath string path to the file from which the series was imported title string title of the series in the file Properties FilePath The path to the file from which the series was imported public string FilePath { get; } Property Value string Origin The origin type of the time series public TimeSeriesDataSource.OriginEnum Origin { get; } Property Value TimeSeriesDataSource.OriginEnum Title The title of the series in the file from which it was imported public string Title { get; } Property Value string Methods Copy() Returns a copy of the datasource public TimeSeriesDataSource Copy() Returns TimeSeriesDataSource ToString() Returns a custom string representation of the datasource public override string ToString() Returns string"
  },
  "api/BlueM.Wave.TimeSeriesDisplayOptions.html": {
    "href": "api/BlueM.Wave.TimeSeriesDisplayOptions.html",
    "title": "Class TimeSeriesDisplayOptions | BlueM.Wave",
    "summary": "Class TimeSeriesDisplayOptions Namespace BlueM.Wave Assembly Wave.dll Class for storing time series display options public class TimeSeriesDisplayOptions Inheritance object TimeSeriesDisplayOptions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeSeriesDisplayOptions() Creates a new TimeSeriesDisplayOption instance with default properties public TimeSeriesDisplayOptions() Remarks Default Color is empty in order to allow automatic color assignment by the chart Properties Color Color public Color Color { get; set; } Property Value Color Remarks Default color is empty. When empty, color is automatically assigned by the chart LineStyle Line style public DashStyle LineStyle { get; set; } Property Value DashStyle LineWidth Line width public int LineWidth { get; set; } Property Value int ShowPoints Flag to show series points public bool ShowPoints { get; set; } Property Value bool Methods Copy() Returns a copy of the instance public TimeSeriesDisplayOptions Copy() Returns TimeSeriesDisplayOptions SetColor(string) Sets the color from a color string public void SetColor(string colorString) Parameters colorString string the color string Remarks Must be either the name of a known color: https://learn.microsoft.com/en-us/dotnet/api/system.drawing.knowncolor or a hexadecimal representation of ARGB values SetLineStyle(string) Sets the line style from a string public void SetLineStyle(string lineStyle) Parameters lineStyle string the line style as string Remarks Recognized line styles: https://learn.microsoft.com/en-us/dotnet/api/system.drawing.drawing2d.dashstyle SetLineWidth(string) Sets the line width from a string public void SetLineWidth(string lineWidth) Parameters lineWidth string line width as string Remarks string must be convertible to an integer SetShowPoints(string) Sets the ShowPoints property from a string public void SetShowPoints(string showPoints) Parameters showPoints string whether to show points Remarks string must be convertible to a boolean"
  },
  "api/BlueM.Wave.TimeSeriesFile.FileExtensions.html": {
    "href": "api/BlueM.Wave.TimeSeriesFile.FileExtensions.html",
    "title": "Class TimeSeriesFile.FileExtensions | BlueM.Wave",
    "summary": "Class TimeSeriesFile.FileExtensions Namespace BlueM.Wave Assembly Wave.dll File extensions public abstract class TimeSeriesFile.FileExtensions Inheritance object TimeSeriesFile.FileExtensions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This is a replacement for an Enum of type String. This should actually be a static class that cannot be instantiated nor inherited from, which would be a Module in VB, but that cannot be nested, and would mess up the namespace. Constructors FileExtensions() protected FileExtensions() Fields ASC public static readonly string ASC Field Value string BCS public static readonly string BCS Field Value string BIN public static readonly string BIN Field Value string CSV public static readonly string CSV Field Value string DAT public static readonly string DAT Field Value string DB public static readonly string DB Field Value string DFS0 public static readonly string DFS0 Field Value string GBL public static readonly string GBL Field Value string KWL public static readonly string KWL Field Value string OUT public static readonly string OUT Field Value string REG public static readonly string REG Field Value string SMB public static readonly string SMB Field Value string TEN public static readonly string TEN Field Value string TXT public static readonly string TXT Field Value string UVF public static readonly string UVF Field Value string WBL public static readonly string WBL Field Value string WEL public static readonly string WEL Field Value string WVP public static readonly string WVP Field Value string XML public static readonly string XML Field Value string ZRE public static readonly string ZRE Field Value string ZRX public static readonly string ZRX Field Value string ZRXP public static readonly string ZRXP Field Value string"
  },
  "api/BlueM.Wave.TimeSeriesFile.FileTypes.html": {
    "href": "api/BlueM.Wave.TimeSeriesFile.FileTypes.html",
    "title": "Enum TimeSeriesFile.FileTypes | BlueM.Wave",
    "summary": "Enum TimeSeriesFile.FileTypes Namespace BlueM.Wave Assembly Wave.dll FileTypes public enum TimeSeriesFile.FileTypes Fields ASC = 2 BIN = 3 CSV = 4 DFS0 = 5 FEWS_PI = 6 GBL = 7 GINA_WEL = 8 GISMO_WEL = 9 HYBNAT_BCS = 10 HYBNAT_WEL = 11 HYDRO_AS_DAT = 12 HYSTEM_REG = 16 HYSTEM_WEL = 13 JAMS = 14 PRMS_OUT = 15 SMB = 18 SMUSI_REG = 17 SWMM_INTERFACE = 20 SWMM_LID_REPORT = 21 SWMM_OUT = 22 SWMM_TIMESERIES = 19 SYDROSQLITE = 23 TEN = 24 UNDETERMINED = 0 UNKNOWN = 1 UVF = 25 WBL = 26 WEL = 27 WVP = 28 ZRE = 29 ZRXP = 30"
  },
  "api/BlueM.Wave.TimeSeriesFile.html": {
    "href": "api/BlueM.Wave.TimeSeriesFile.html",
    "title": "Class TimeSeriesFile | BlueM.Wave",
    "summary": "Class TimeSeriesFile Namespace BlueM.Wave Assembly Wave.dll Abstract base class for all file formats public abstract class TimeSeriesFile Inheritance object TimeSeriesFile Derived ASC BIN CSV DFS0 FEWS_PI GBL GISMO_WEL HYBNAT_BCS HYBNAT_WEL HYDRO_AS_2D HystemExtran_REG HystemExtran_WEL JAMS PRMS SMB SMUSI_REG SWMM_INTERFACE SWMM_LID_REPORT SWMM_OUT SWMM_TIMESERIES SydroSQLite UVF WBL WEL ZRE ZRXP Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeSeriesFile(string, bool) Constructor public TimeSeriesFile(string FileName, bool ReadAllNow = false) Parameters FileName string Path to the file to be imported ReadAllNow bool If True, select all series and read the file immediately Fields TimeSeries Stores the TimeSeries read from the file. The key corresponds to the column index stored as Index in TimeSeriesInfos. public Dictionary<int, TimeSeries> TimeSeries Field Value Dictionary<int, TimeSeries> Properties ColumnOffset Number of characters before the first column (only relevant for fixed width columns) public int ColumnOffset { get; set; } Property Value int ColumnWidth Column width (default is 16) public int ColumnWidth { get; set; } Property Value int Remarks only relevant for fixed width files DateTimeColumnIndex Index of the column containing the datetime values public int DateTimeColumnIndex { get; set; } Property Value int Dateformat Date format (default is Helpers.CurrentDateFormat) public string Dateformat { get; set; } Property Value string DecimalSeparator Decimal separator (default is period) public Character DecimalSeparator { get; set; } Property Value Character Encoding Encoding to use for reading the file public Encoding Encoding { get; set; } Property Value Encoding Remarks Defaults to the system default (usually ISO-8859-1) File Path to file public string File { get; set; } Property Value string FileMetadata File metadata public Metadata FileMetadata { get; } Property Value Metadata IsColumnSeparated Indicates whether the file contains columns separated by a character (True, default) or is fixed width (False) public bool IsColumnSeparated { get; set; } Property Value bool MetadataKeys Returns a list of format-specific metadata keys public static List<string> MetadataKeys { get; } Property Value List<string> Remarks Is an empty list by default, should be overridden by inheriting classes SelectedSeries List of TimeSeriesInfo of series currently selected for import public List<TimeSeriesInfo> SelectedSeries { get; } Property Value List<TimeSeriesInfo> Separator Separator (default is semicolon) public Character Separator { get; set; } Property Value Character TimeSeriesInfos List of TimeSeriesInfo of all series contained in a file public List<TimeSeriesInfo> TimeSeriesInfos { get; set; } Property Value List<TimeSeriesInfo> TitleSuffix Suffix to be added to the timeseries titles when imported from this file public string TitleSuffix { get; set; } Property Value string Remarks This is useful for distinguishing between series with the same titles in different files. For example, if you import two files with the same series names, you can set a suffix for each file to differentiate them in the resulting timeseries. UseImportDialog Indicates whether the ImportDialog should be shown when importing this file format public abstract bool UseImportDialog { get; } Property Value bool True if the ImportDialog should be shown when importing this file format UseUnits Read units from the file? (default is True) public bool UseUnits { get; set; } Property Value bool getTimeSeries[int] Get a timeseries from the file using its index public TimeSeries getTimeSeries[int index = 0] { get; } Parameters index int Index of the desired timeseries within the file Property Value TimeSeries The timeseries Remarks If the timeseries has not been imported yet, an import is initiated. Throws an exception if the timeseries cannot be found in the file. getTimeSeries[string] Get a timeseries from the file using its title public TimeSeries getTimeSeries[string title] { get; } Parameters title string Title of the desired timeseries. Property Value TimeSeries The timeseries Remarks If the timeseries has not been imported yet, an import is initiated. Throws an exception if the timeseries cannot be found in the file. iLineData Number of the first line containing data public int iLineData { get; set; } Property Value int iLineHeadings Number of the line containing column headings public int iLineHeadings { get; set; } Property Value int iLineUnits Number of the line containing units public int iLineUnits { get; set; } Property Value int nLinesHeader Number of header lines public int nLinesHeader { get; } Property Value int iLineData - 1 Methods SupportsMultipleSeries(FileTypes) Returns whether a file type supports multiple series in one file public static bool SupportsMultipleSeries(TimeSeriesFile.FileTypes type) Parameters type TimeSeriesFile.FileTypes The file type Returns bool True if the file type supports multiple series getFileExtension(FileTypes) Returns the default file extension for a file type public static string getFileExtension(TimeSeriesFile.FileTypes type) Parameters type TimeSeriesFile.FileTypes The file type Returns string The file extension as a string (including the leading \".\") getFileType(string) Determines the file type of a file based on the file's extension and contents public static TimeSeriesFile.FileTypes getFileType(string file) Parameters file string Path to the file Returns TimeSeriesFile.FileTypes the determined file type Remarks Also checks whether the file exists and if the file format is as expected. If the file is a WEL file, this function also checks whether the file is contained within a WLZIP of the same name and if it is, extracts it. getInstance(string, FileTypes) Factory method for creating a TimeSeriesFile instance based on the file type public static TimeSeriesFile getInstance(string file, TimeSeriesFile.FileTypes fileType = FileTypes.UNDETERMINED) Parameters file string Path to the file fileType TimeSeriesFile.FileTypes Optional file type. If not provided, the type is determined using getFileType() Returns TimeSeriesFile A TimeSeriesFile instance representing the file get_getTimeSeries(int) public TimeSeries get_getTimeSeries(int index = 0) Parameters index int Returns TimeSeries get_getTimeSeries(string) public TimeSeries get_getTimeSeries(string title) Parameters title string Returns TimeSeries readFile() Reads the selected series (see SelectedSeries) from the file and stores them as timeseries in TimeSeries public abstract void readFile() readSeriesInfo() Reads information about the series contained in the file and stores it in TimeSeriesInfos public abstract void readSeriesInfo() selectAllSeries() Select all available series for import public void selectAllSeries() selectSeries(int) Select a series for import by index public bool selectSeries(int index) Parameters index int index Returns bool True if successful, False if index was not found selectSeries(string) Select a series for import by name public bool selectSeries(string seriesName) Parameters seriesName string name of the series Returns bool True if successful, False if series name was not found setDefaultMetadata(TimeSeries) Sets default metadata keys and values for a time series corresponding to the file format public static void setDefaultMetadata(TimeSeries ts) Parameters ts TimeSeries Remarks Should be overloaded by inheriting classes that deal with metadata"
  },
  "api/BlueM.Wave.TimeSeriesInfo.html": {
    "href": "api/BlueM.Wave.TimeSeriesInfo.html",
    "title": "Class TimeSeriesInfo | BlueM.Wave",
    "summary": "Class TimeSeriesInfo Namespace BlueM.Wave Assembly Wave.dll Contains basic information about a series contained in a file public class TimeSeriesInfo Inheritance object TimeSeriesInfo Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TimeSeriesInfo() Constructor public TimeSeriesInfo() Fields Index Index of the series in the file (usually the column index) public int Index Field Value int Name Series name public string Name Field Value string Unit Series unit public string Unit Field Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/BlueM.Wave.Wave.html": {
    "href": "api/BlueM.Wave.Wave.html",
    "title": "Class Wave | BlueM.Wave",
    "summary": "Class Wave Namespace BlueM.Wave Assembly Wave.dll Wave Model public class Wave Inheritance object Wave Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Wave() public Wave() Fields TimeSeries Internal collection of time series public TimeSeriesCollection TimeSeries Field Value TimeSeriesCollection Methods Import_File(string) Import a file public void Import_File(string file) Parameters file string file path Import_Files(IEnumerable<string>) Import series from multiple files public void Import_Files(IEnumerable<string> files) Parameters files IEnumerable<string> An enumerable of file paths Import_Series(ref TimeSeries) Import a time series public void Import_Series(ref TimeSeries ts) Parameters ts TimeSeries the time series"
  },
  "api/BlueM.Wave.html": {
    "href": "api/BlueM.Wave.html",
    "title": "Namespace BlueM.Wave | BlueM.Wave",
    "summary": "Namespace BlueM.Wave Classes App Class representing an instance of the Wave app Character Helper Class for Characters DateRange Represents a date range with defined start and end dates Helpers Log Log Metadata Class representing time series metadata Month Class representing a calendar month SettingsDialog TimeSeries Class representing a time series TimeSeriesCollection Collection of TimeSeries Implemented as an ordered dictionary with Ids as keys and TimeSeries as values TimeSeriesDataSource Stores information about the datasource of a time series TimeSeriesDisplayOptions Class for storing time series display options TimeSeriesFile Abstract base class for all file formats TimeSeriesFile.FileExtensions File extensions TimeSeriesInfo Contains basic information about a series contained in a file Wave Wave Model Enums Helpers.Direction Log.levels Log levels TimeSeries.InterpretationEnum Interpretations TimeSeries.TimeStepTypeEnum Timestep types TimeSeriesDataSource.OriginEnum Origin types TimeSeriesFile.FileTypes FileTypes Delegates Log.LogClearedEventHandler Log.LogMsgAddedEventHandler"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "BlueM.Wave API | BlueM.Wave",
    "summary": "BlueM.Wave API The BlueM.Wave API provides methods for reading time series from files, manipulating and displaying them. To access the API, include a reference to Wave.exe (or to the Wave project if you have the source code) in your .NET project. Introduction TimeSeries The class BlueM.Wave.TimeSeries represents a single time series and exposes methods for manipulating them: 'create a new time series Dim ts As New BlueM.Wave.TimeSeries(\"my series\") ts.Unit = \"m3/s\" ts.Interpretation = BlueM.Wave.TimeSeries.InterpretationEnum.BlockRight 'add some nodes to the time series ts.AddNode(New DateTime(2000, 1, 1), 10) ts.AddNode(New DateTime(2000, 1, 2), 20) ts.AddNode(New DateTime(2000, 1, 3), 30) ts.AddNode(New DateTime(2000, 1, 4), 15) 'print some information about the time series Console.WriteLine(\"Length: \" & ts.Length) Console.WriteLine(\"Start date: \" & ts.StartDate) Console.WriteLine(\"End date: \" & ts.EndDate) Console.WriteLine(\"Average: \" & ts.Average) 'manipulate the time series, e.g. by cutting it ts.Cut(New DateTime(2000, 1, 2), New DateTime(2000, 1, 3)) TimeSeriesFile You can use the BlueM.Wave.TimeSeriesFile class' factory method getInstance() to read time series from any of the supported file formats: Dim filepath as String = \"path\\to\\file\" Dim tsfile as BlueM.Wave.TimeSeriesFile = BlueM.Wave.TimeSeriesFile.getInstance(filepath) 'check the time series contained in the file For Each sInfo As BlueM.Wave.TimeSeriesInfo In tsfile.TimeSeriesInfos Console.WriteLine(sInfo.Name) Next 'select some series for import tsfile.selectAllSeries() 'read the selected time series from the file tsfile.readFile() 'loop over all series read from the file and print some information about them For Each ts As BlueM.Wave.TimeSeries In tsfile.TimeSeries.Values Console.WriteLine(\"Series title: \" & ts.Title) Console.WriteLine(\"Extent: \" & ts.StartDate & \" - \" & ts.EndDate) Console.WriteLine(\"Max value: \" & ts.Maximum) Console.WriteLine(\"Min value: \" & ts.Minimum) Next 'get one particular time series Dim ts As BlueM.Wave.TimeSeries = tsfile.getTimeSeries(\"seriesname or index\") The namespace BlueM.Wave.Fileformats contains special classes for reading from specific file formats, which all inherit from TimeSeriesFile. App The class BlueM.Wave.App represents a fully fledged Wave app instance including it's windows. Instantiate a new Wave app instance as follows. This will show the main Wave window. Dim app As New BlueM.Wave.App() Then use the App's Wave property to access methods e.g. for importing time series: app.Wave.Import_File() app.Wave.Import_Series() and use the TimeSeries field to access any already imported time series: app.Wave.TimeSeries You can also use the BlueM.Wave.Wave class on its own to import time series and then launch the app afterwards: Dim wave1 as New BlueM.Wave.Wave() wave1.Import_Series() 'instantiate the app with the existing Wave instance Dim app As New BlueM.Wave.App(wave1) Examples The repository contains a project Wave.Examples with some more examples of API usage."
  },
  "articles/analysis.html": {
    "href": "articles/analysis.html",
    "title": "Adding a new analysis function | BlueM.Wave",
    "summary": "Adding a new analysis function To add a new analysis function in Wave write a new analysis function class that inherits from Analysis add the new analysis function to the AnalysisFactory 1. Create a new analysis class The new analysis class must inherit from Analysis. It receives a list of input time series and can produce text, values, a chart, a table and/or a list of result time series. Example Analysis\\TestAnalysis.vb: 'BlueM.Wave 'Copyright (C) BlueM Dev Group '<https://www.bluemodel.org> ' 'This program is free software: you can redistribute it and/or modify 'it under the terms of the GNU Lesser General Public License as published by 'the Free Software Foundation, either version 3 of the License, or '(at your option) any later version. ' 'This program is distributed in the hope that it will be useful, 'but WITHOUT ANY WARRANTY; without even the implied warranty of 'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 'GNU Lesser General Public License for more details. ' 'You should have received a copy of the GNU Lesser General Public License 'along with this program. If not, see <https://www.gnu.org/licenses/>. ' ''' <summary> ''' Write description! ''' </summary> ''' <remarks>https://wiki.bluemodel.org/index.php/Wave:TestAnalysis</remarks> Friend Class TestAnalysis Inherits Analysis 'fields for storing stuff Private timeseries_input As TimeSeries 'Time series to be analyzed Private title As String 'Title of the time series Private length As Integer 'Count of the time series values Private timeseries_output As TimeSeries 'Result time series ''' <summary> ''' Returns the description of the analysis function ''' </summary> Public Overloads Shared Function Description() As String Return \"Write description!\" End Function ''' <summary> ''' Flag indicating whether the analysis function produces a result text ''' </summary> Public Overrides ReadOnly Property hasResultText() As Boolean Get Return True End Get End Property ''' <summary> ''' Flag indicating whether the analysis function produces result values ''' </summary> Public Overrides ReadOnly Property hasResultValues() As Boolean Get Return True End Get End Property ''' <summary> ''' Flag indicating whether the analysis function produces a result chart ''' </summary> Public Overrides ReadOnly Property hasResultChart() As Boolean Get Return True End Get End Property ''' <summary> ''' Flag indicating whether the analysis function has result series ''' that should be added to the main diagram ''' </summary> Public Overrides ReadOnly Property hasResultSeries() As Boolean Get Return True End Get End Property ''' <summary> ''' Flag indicating whether the analysis function has a result table ''' that should be shown in a separate window ''' </summary> Public Overrides ReadOnly Property hasResultTable() As Boolean Get Return True End Get End Property ''' <summary> ''' Class constructor ''' </summary> ''' <param name=\"timeseries\">list of time series to be analyzed</param> Public Sub New(ByRef timeseries As List(Of TimeSeries)) 'Call constructor of base class Call MyBase.New(timeseries) 'Check expected count of time series If (timeseries.Count <> 1) Then Throw New Exception(\"The TestAnalysis requires the selection of exactly one time series!\") End If End Sub ''' <summary> ''' Process the analysis ''' </summary> Public Overrides Sub ProcessAnalysis() 'Get time series from list (`InputTimeSeries` defined in base class) timeseries_input = InputTimeSeries.Item(0) 'Get values from input time series title = timeseries_input.Title length = timeseries_input.Length '... '... 'Implement analysis here ... 'Optional: display a progress bar MyBase.AnalysisProgressStart(100) '... MyBase.AnalysisProgressUpdate(50) '... MyBase.AnalysisProgressFinish() 'store result for later timeseries_output = timeseries_input.Clone() End Sub ''' <summary> ''' Prepare the results of the analysis ''' </summary> Public Overrides Sub PrepareResults() 'Result text (will be shown in WaveLog) MyBase.ResultText = \"Success!\" 'Result values (will be shown in WaveLog) MyBase.ResultValues.Add($\"Count values of time series '{title}'\", length) 'Result chart (will be shown in separate window) MyBase.ResultChart = New Steema.TeeChart.Chart() 'Fill and format chart '... '... 'Result table (will be shown in separate window) MyBase.ResultTable = New DataTable(\"Test analysis result\") 'add columns and rows as needed '... '... 'List of result series (will be loaded in main window) MyBase.ResultSeries = New List(Of TimeSeries) From {timeseries_output} End Sub End Class 2. Add the new analysis function to the AnalysisFactory Add the new analysis function to the AnalysisFactory (file Analysis\\AnalysisFactory.vb). The locations to edit are highlighted below and marked with EDIT THIS. 'BlueM.Wave 'Copyright (C) BlueM Dev Group '<https://www.bluemodel.org> ' 'This program is free software: you can redistribute it and/or modify 'it under the terms of the GNU Lesser General Public License as published by 'the Free Software Foundation, either version 3 of the License, or '(at your option) any later version. ' 'This program is distributed in the hope that it will be useful, 'but WITHOUT ANY WARRANTY; without even the implied warranty of 'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 'GNU Lesser General Public License for more details. ' 'You should have received a copy of the GNU Lesser General Public License 'along with this program. If not, see <https://www.gnu.org/licenses/>. ' ''' <summary> ''' Factory for creating analysis instances ''' </summary> Friend Module AnalysisFactory ''' <summary> ''' List of analysis functions ''' </summary> Public Enum AnalysisFunctions Accumulate AnnualRecurrenceProbability AnnualStatistics Autocorrelation Calculator ChangeTimestep Comparison Decumulate DoubleSumCurve GoodnessOfFit Histogram LinearRegression MonthlyStatistics TimeShift TimestepAnalysis 'TestAnalysis 'EDIT THIS End Enum ''' <summary> ''' Returns a text description of the analysis function ''' </summary> ''' <param name=\"analysisfunction\"></param> ''' <returns></returns> Public Function getAnalysisDescription(analysisfunction As AnalysisFunctions) As String Select Case analysisfunction Case AnalysisFunctions.Accumulate Return Accumulate.Description Case AnalysisFunctions.AnnualRecurrenceProbability Return AnnualRecurrenceProbability.Description Case AnalysisFunctions.AnnualStatistics Return AnnualStatistics.Description Case AnalysisFunctions.Autocorrelation Return Autocorrelation.Description Case AnalysisFunctions.Calculator Return Calculator.Description Case AnalysisFunctions.ChangeTimestep Return ChangeTimestep.Description Case AnalysisFunctions.Comparison Return Comparison.Description Case AnalysisFunctions.Decumulate Return Decumulate.Description Case AnalysisFunctions.DoubleSumCurve Return DoubleSumCurve.Description Case AnalysisFunctions.GoodnessOfFit Return GoodnessOfFit.Description Case AnalysisFunctions.Histogram Return Histogram.Description Case AnalysisFunctions.LinearRegression Return LinearRegression.Description Case AnalysisFunctions.MonthlyStatistics Return MonthlyStatistics.Description Case AnalysisFunctions.TimeShift Return TimeShift.Description Case AnalysisFunctions.TimestepAnalysis Return TimeStepAnalysis.Description 'Case AnalysisFunctions.TestAnalysis 'EDIT THIS ' Return TestAnalysis.Description 'EDIT THIS Case Else Return \"Description not found\" End Select End Function ''' <summary> ''' Factory method for creating an analysis instance ''' </summary> ''' <param name=\"analysisfunction\">the type of analysis instance to create</param> ''' <param name=\"seriesList\">list of input TimeSeries</param> ''' <returns>the analysis instance</returns> Public Function CreateAnalysis(analysisfunction As AnalysisFunctions, seriesList As List(Of TimeSeries)) As Analysis Dim oAnalysis As Analysis Select Case analysisfunction Case AnalysisFunctions.Accumulate oAnalysis = New Accumulate(seriesList) Case AnalysisFunctions.AnnualRecurrenceProbability oAnalysis = New AnnualRecurrenceProbability(seriesList) Case AnalysisFunctions.AnnualStatistics oAnalysis = New AnnualStatistics(seriesList) Case AnalysisFunctions.Autocorrelation oAnalysis = New Autocorrelation(seriesList) Case AnalysisFunctions.Calculator oAnalysis = New Calculator(seriesList) Case AnalysisFunctions.ChangeTimestep oAnalysis = New ChangeTimestep(seriesList) Case AnalysisFunctions.Comparison oAnalysis = New Comparison(seriesList) Case AnalysisFunctions.Decumulate oAnalysis = New Decumulate(seriesList) Case AnalysisFunctions.DoubleSumCurve oAnalysis = New DoubleSumCurve(seriesList) Case AnalysisFunctions.GoodnessOfFit oAnalysis = New GoodnessOfFit(seriesList) Case AnalysisFunctions.Histogram oAnalysis = New Histogram(seriesList) Case AnalysisFunctions.LinearRegression oAnalysis = New LinearRegression(seriesList) Case AnalysisFunctions.MonthlyStatistics oAnalysis = New MonthlyStatistics(seriesList) Case AnalysisFunctions.TimeShift oAnalysis = New TimeShift(seriesList) Case AnalysisFunctions.TimestepAnalysis oAnalysis = New TimeStepAnalysis(seriesList) 'Case AnalysisFunctions.TestAnalysis 'EDIT THIS ' oAnalysis = New TestAnalysis(seriesList) 'EDIT THIS Case Else Throw New Exception(\"Analysis not found!\") End Select Return oAnalysis End Function End Module"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "| BlueM.Wave",
    "summary": "Getting started Download Visual Studio Installer (Community Edition) Install Visual Studio with .NET-desktop development tools Start Visual Studio and go to Extras -> Options -> NuGet Package Manager -> Package Sources Add https://api.nuget.org/v3/index.json to package sources Clone BlueM.Wave source code from https://github.com/bluemodel/BlueM.Wave Copy a valid TeeChart Pro license file to BlueM.Wave\\source\\My Project\\TeeChart.licenses (see below for instructions on using the evaluation version of TeeChart for testing purposes) Open Wave.sln in Visual Studio Set Wave as the startup project Run project (Debug -> Start Debugging) Optional setup steps: To run tests in Wave.Tests: Clone BlueM.Datasets from https://github.com/bluemodel/BlueM.Datasets into the same parent directory as BlueM.Wave Run Tests (Test -> Run all Tests), see below for details To build the installer project Wave.Setup: Install the extension Microsoft Visual Studio Installer Projects 2022, see below for details TeeChart license BlueM.Wave uses TeeChart .NET for all charts. To compile a fully functional version of BlueM.Wave, you need a valid TeeChart .NET Pro license file located at BlueM.Wave\\source\\My Project\\TeeChart.licenses. For testing purposes, you can use the evaluation version of TeeChart by creating an empty text file at BlueM.Wave\\source\\My Project\\TeeChart.licenses or by excluding the corresponding entry My Project\\TeeChart.licenses from the Wave project in Visual Studio. This will allow you to compile, but any charts will be displayed with a watermark. Testing The repository contains an assembly Wave.Tests for unit testing. Some of the tests use test data from the BlueM.Datasets repository, which needs to be checked out alongside BlueM.Wave in the same parent folder. There are two ways to run tests: from within Visual Studio using the Text Explorer window (see also this article) from the command-line with the following command (see also this arcticle): vstest.console.exe BlueM.Wave\\tests\\bin\\x64\\Debug\\Wave.Tests.dll /Settings:BlueM.Wave\\tests\\tests.runsettings To add new tests, follow the pattern of the existing ones and/or refer to the MSTest framework docs. All tests defined in Wave.Tests are automatically run in a GitHub action whenever a push to the master branch or to a pull request occurs (see workflow file). Debug log messages Debug log messages can be created by calling Log.AddLogEntry(levels.debug, \"message\") and are only visible in the log if the user setting loggingLevel is set to debug. API The BlueM.Wave API provides methods for reading time series from files, manipulating and displaying them. To access the API, include a reference to Wave.exe (or to the Wave project if you have the source code) in your .NET project. The repository contains a project Wave.Examples with some examples of API usage. See the API documentation Building an installer An installer (.msi) for BlueM.Wave can be built using the Wave.Setup project located at setup\\Wave.Setup.vdproj. This is a Visual Studio Installer Project which requires a Visual Studio extension to be installed (see docs). Releases To create a new release: Change the AssemblyVersion in the file source\\My Project\\AssemblyInfo.vb. Update the changelog in the file source\\CHANGELOG.md. In Visual Studio, select the Wave.Setup project and update its Version property to the new version number. Visual Studio will ask to change the ProductCode, answer Yes. Commit and push the changes to the master branch together with a new tag consisting of the version number (e.g. \"2.4.3\") When a new tag is pushed to the master branch, this triggers a workflow which builds Wave and the installer and creates a new draft release on GitHub. This draft release must be published manually."
  },
  "index.html": {
    "href": "index.html",
    "title": "Wave.Docs | BlueM.Wave",
    "summary": "Wave.Docs This is the developer documentation for BlueM.Wave. For general documentation, refer to https://wiki.bluemodel.org/index.php/BlueM.Wave Getting started see Introduction API documentation see API documentation Source code The source code is managed on GitHub: https://github.com/bluemodel/BlueM.Wave Issues Issues are managed on GitHub: https://github.com/bluemodel/BlueM.Wave/issues"
  }
}